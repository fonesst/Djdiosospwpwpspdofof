# –ù–∞—á–∞–ª–æ –±–∏–±–ª–∏–æ—Ç–µ–∫k
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
import requests
from bs4 import BeautifulSoup
import urllib.parse
import json
import os
import time
import random
import logging
import zipfile
import io
from datetime import datetime
from urllib.parse import urljoin, urlparse
from search import perform_ahmia_search, perform_aol_search, perform_google_search, perform_bing_search
from mask_link import masklink
from ip import parse_geolocation_data, format_data
from parse import parse_site
from gemini import perform_gemini_with_aol_search
from git_hub_fz import create_github_repo, upload_files_to_repo, enable_github_pages
from phoneFO import phone_lookup  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ —Ñ–∞–π–ª–∞ phoneFO.py
from open_site import handle_open_site, create_markup, user_texts, user_titles, user_urls  # –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ open_site.py
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
from kadastr import parse_opendatabot_page, close_driver
from selenium.webdriver.common.by import By
import base64
import json
# –ö–æ–Ω–µ—Ü –±–∏–±–ª–∏–æ—Ç–µ–∫


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)
# –ö–æ–Ω–µ—Ü –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã, –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
API_KEY = '7368730334:AAH9xUG8G_Ro8mvV_fDQxd5ddkwjxHnBoeg'
ADMIN_CHAT_ID = '1653222949'
GEMINI_API_KEY = 'AIzaSyCzgAreGdXqUXZd5-P_iLUg-3hM9U4Md70'
GEMINI_API_URL = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent'
CHANNEL_ID = '@fronest_news'
GITHUB_TOKEN = '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'
REPO = 'fonesst/usersFRONEST'  # –£–∫–∞–∂–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å/—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π'
# –ö–æ–Ω–µ—Ü –∫–æ–Ω—Å—Ç–∞–Ω—Ç –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π

bot = telebot.TeleBot(API_KEY)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_query = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è Google Dork –ø–æ–∏—Å–∫–∞
def perform_google_search(query, filetype, start=0, max_results=100):
    all_results = []
    while len(all_results) < max_results:
        search_query = f"{query} filetype:{filetype}"
        url = f"https://www.google.com/search?q={urllib.parse.quote(search_query)}&start={start}"
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        response = requests.get(url, headers=headers)
        soup = BeautifulSoup(response.text, 'html.parser')

        results = soup.find_all('div', class_='g')
        if not results:
            break

        for result in results:
            link = result.find('a', href=True)
            if link:
                url = link['href']
                domain = urllib.parse.urlparse(url).netloc
                all_results.append((domain, url))
                if len(all_results) >= max_results:
                    break

        start += 10
        time.sleep(1)

    return all_results

# –ö–æ–º–∞–Ω–¥–∞ /dorks
@bot.message_handler(commands=['dorks'])
def handle_dorks_command(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ Google Dorks:")
    bot.register_next_step_handler(message, get_user_query)

def get_user_query(message):
    user_query[message.chat.id] = message.text
    bot.send_message(message.chat.id, "–ò—â—É —Ñ–∞–π–ª—ã –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...")

    base_dir = 'search_results'
    if os.path.exists(base_dir):
        for root, dirs, files in os.walk(base_dir, topdown=False):
            for name in files:
                os.remove(os.path.join(root, name))
            for name in dirs:
                os.rmdir(os.path.join(root, name))
    os.makedirs(base_dir, exist_ok=True)

    file_categories = {
    "–¢–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã": ['txt', 'md', 'log', 'csv', 'xml', 'json', 'yaml', 'yml', 'ini', 'rtf', 'doc', 'docx', 'pdf'],
    "–¢–∞–±–ª–∏—á–Ω—ã–µ —Ñ–∞–π–ª—ã": ['xls', 'xlsx', 'ods', 'csv', 'tsv'],
    "–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö": ['db', 'sqlite', 'sqlite3', 'sql', 'mdb', 'accdb'],
    "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è": ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'tiff', 'svg'],
    "–ê—É–¥–∏–æ —Ñ–∞–π–ª—ã": ['mp3', 'wav', 'flac', 'aac', 'ogg', 'm4a'],
    "–í–∏–¥–µ–æ —Ñ–∞–π–ª—ã": ['mp4', 'mkv', 'avi', 'mov', 'wmv', 'flv'],
    "–ê—Ä—Ö–∏–≤—ã –∏ —Å–∂–∞—Ç–∏–µ": ['zip', 'rar', '7z', 'tar', 'gz'],
    "–§–∞–π–ª—ã –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤": ['py', 'js', 'html', 'css', 'php', 'cpp', 'java'],
    "–î–æ–∫—É–º–µ–Ω—Ç—ã": ['pdf', 'doc', 'docx', 'odt', 'rtf'],
    "–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã": ['exe', 'dll', 'sys', 'bat', 'ini'],
    "3D –ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≥—Ä–∞—Ñ–∏–∫–∞": ['obj', 'fbx', 'stl', 'blend'],
    "–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã": ['vdi', 'vmdk', 'dockerfile'],
    "–î—Ä—É–≥–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã": ['torrent', 'ics', 'apk', 'ipa']
    }
    
    for category, extensions in file_categories.items():
        bot.send_message(message.chat.id, f"–ü–æ–∏—Å–∫ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}'...")
        for filetype in extensions:
            search_results = perform_google_search(user_query[message.chat.id], filetype)
            if search_results:
                save_results_to_file(search_results, category, filetype, base_dir)
                bot.send_message(message.chat.id, f"–ù–∞–π–¥–µ–Ω–æ {len(search_results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è —Ç–∏–ø–∞ {filetype}")
    
    zip_path = 'all_results.zip'
    create_zip_structure(base_dir, zip_path)
    
    with open(zip_path, 'rb') as zip_file:
        bot.send_document(message.chat.id, zip_file)
    
    os.remove(zip_path)
    bot.send_message(message.chat.id, "–ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –≤–∏–¥–µ ZIP-–∞—Ä—Ö–∏–≤–∞.")

# –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Ñ–∞–π–ª
def save_results_to_file(results, category, filetype, base_dir):
    category_dir = os.path.join(base_dir, category, filetype.upper())
    os.makedirs(category_dir, exist_ok=True)
    
    for domain, url in results:
        file_path = os.path.join(category_dir, f'{domain}.txt')
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(url)

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è ZIP-–∞—Ä—Ö–∏–≤–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
def create_zip_structure(base_dir, zip_name='all_results.zip'):
    with zipfile.ZipFile(zip_name, 'w') as zipf:
        for folder, subfolders, files in os.walk(base_dir):
            for file in files:
                file_path = os.path.join(folder, file)
                archive_path = os.path.relpath(file_path, base_dir)
                zipf.write(file_path, archive_path)
# –ö–æ–Ω–µ—Ü –∫–æ–º–∞–Ω–¥—ã /dorks
        

# –§—É–Ω–∫—Ü–∏—è OSINT –°–µ—Ä–≤–∏—Å–æ–≤ /osint
@bot.message_handler(commands=['osint'])
def handle_osint(message):
    osint_info = """
–ü—Ä–∏–≤–µ—Ç, –ò—Å–∫–∞—Ç–µ–ª—å –ó–Ω–∞–Ω–∏–π!

–¢—ã –≤—Å—Ç—É–ø–∏–ª –Ω–∞ —Ç—Ä–æ–ø—É OSINT ‚Äî –∏—Å–∫—É—Å—Å—Ç–≤–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤. –≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, —ç—Ç–æ —Ç–≤–æ–∏ –∫–ª—é—á–∏ –∫ –º–∏—Ä—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ó–∞ –∫–∞–∂–¥—ã–º –∑–∞–ø—Ä–æ—Å–æ–º —Å–∫—Ä—ã–≤–∞—é—Ç—Å—è —Å–µ–∫—Ä–µ—Ç—ã.

–¢—ã –≤—Å—Ç—É–ø–∞–µ—à—å –Ω–∞ –ø—É—Ç—å —Ö–∞–∫–∏–Ω–≥–∞ –∏ —Ä–∞–∑–≤–µ–¥–∫–∏. –ù–æ –ø–æ–º–Ω–∏ ‚Äî –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ –∑–∞–∫–æ–Ω –≤—Å–µ–≥–¥–∞ –∏–¥—É—Ç —Ä—è–¥–æ–º. –ò—Å–ø–æ–ª—å–∑—É–π —Å–≤–æ—ë –∑–Ω–∞–Ω–∏–µ —Å —É–º–æ–º.

–¢–≤–æ—è —Ä–∞–∑–≤–µ–¥–∫–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å ñ§ç
"""
    keyboard = InlineKeyboardMarkup()
    buttons = [
        InlineKeyboardButton(text="NETSTALKING", callback_data="netstalking"),
        InlineKeyboardButton(text=".ONION", callback_data="onion"),
        InlineKeyboardButton(text="–ë–û–¢–´ –¢–ï–õ–ï–ì–†–ê–ú–ú", callback_data="telegram_bots"),
        InlineKeyboardButton(text="–ê–ù–û–ù–ò–ú–ù–û–°–¢–¨", callback_data="anonymity"),
        InlineKeyboardButton(text="–í–ö", callback_data="vk"),
        InlineKeyboardButton(text="–ù–∏–∫", callback_data="nickname"),
        InlineKeyboardButton(text="–ü–æ–∏—Å–∫ –ø–æ –¢–ì", callback_data="searchtg"),
        InlineKeyboardButton(text="–ü—Ä–æ–±–∏–≤ –ø–æ –ê–í–¢–û", callback_data="car"),
        InlineKeyboardButton(text="Intelligence X", callback_data="intelligence_x"),
        InlineKeyboardButton(text="–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Å–∞–π—Ç–æ–≤", callback_data="webwhois"),
        InlineKeyboardButton(text="–¢–µ—Ä–º–∏–Ω—ã", callback_data="terms"),
        InlineKeyboardButton(text="–ü—Ä–æ–±–∏–≤ –ø–æ —Ñ–æ—Ç–æ", callback_data="photo"),
        InlineKeyboardButton(text="–≠–¢–ê–ü–´ OSINT", callback_data="osintetaps"),
        InlineKeyboardButton(text="VPN", callback_data="vpns"),
        InlineKeyboardButton(text="–û—à–∏–±–∫–∏ —Ö–∞–∫–µ—Ä–æ–≤", callback_data="hackermistakes"),
        InlineKeyboardButton(text="Google Dork", callback_data="googledork"),
        InlineKeyboardButton(text="–í–°–Å –û VPN", callback_data="vpntoproxy"),
        InlineKeyboardButton(text="–°–ï–†–í–ò–°–´", callback_data="services"),
    ]
    keyboard.add(*buttons)

    bot.send_message(message.chat.id, osint_info, reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: call.data in ['netstalking', 'onion', 'telegram_bots', 'anonymity', 'vk', 'nickname', 'searchtg', 'car', 'intelligence_x', 'webwhois', 'terms', 'photo', 'osintetaps', 'vpns', 'hackermistakes', 'googledork', 'vpntoproxy', 'services'])
def handle_osint_topics(call):
    bot.answer_callback_query(call.id)

    topics = {
        'netstalking': {
            'text': """
–ï—Å–ª–∏ –ø—Ä–æ—Å—Ç–æ, —Ç–æ –Ω–µ—Ç—Å—Ç–∞–ª–∫–∏–Ω–≥ ‚Äî —ç—Ç–æ –ø–æ–∏—Å–∫ —Å–µ–∫—Ä–µ—Ç–æ–≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞.
–ù–µ—Ç—Å—Ç–∞–ª–∫–∏–Ω–≥ –æ–ø–∏—Ä–∞–µ—Ç—Å—è –Ω–∞ —Ç–µ–æ—Ä–∏—é –æ —Ç—Ä–µ—Ö —É—Ä–æ–≤–Ω–µ–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞, —Å–æ–≥–ª–∞—Å–Ω–æ –∫–æ—Ç–æ—Ä–æ–º—É —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤—Å–µ–º –∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ—Ç–∫—Ä—ã—Ç—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º–∞—è –≤–∏–¥–∏–º–∞—è —Å–µ—Ç—å, –≤ –∫–æ—Ç–æ—Ä–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –≤—Å–µ—Ö –∂–µ–ª–∞—é—â–∏—Ö –∏ –¥–æ—Å—Ç–∏–∂–∏–º–∞ —Å –ø–æ–º–æ—â—å—é –æ–±—ã—á–Ω–æ–≥–æ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞. –í—Ç–æ—Ä–æ–π —É—Ä–æ–≤–µ–Ω—å, –≥–ª—É–±–æ–∫–∞—è —Å–µ—Ç—å, —Å —Ä–µ—Å—É—Ä—Å–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ –æ–±—ã—á–Ω—ã–π –ø–æ–∏—Å–∫ ‚Äî –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ—Å–æ–±–æ–º –ø–æ–ª–µ –∑—Ä–µ–Ω–∏–∏ –∏—Å–∫–∞—Ç–µ–ª–µ–π —Å–µ–∫—Ä–µ—Ç–æ–≤, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ—Ç —Å–µ–≥–º–µ–Ω—Ç —Å–µ—Ç–∏ –∏–º–µ–µ—Ç –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞. –¢—Ä–µ—Ç–∏–π —É—Ä–æ–≤–µ–Ω—å —ç—Ç–æ —É–∂–µ –¥–∞—Ä–∫–Ω–µ—Ç —Å–æ –≤—Å–µ–º–∏ –≤—ã—Ç–µ–∫–∞—é—â–∏–º–∏ —É—Ö–∏—â—Ä–µ–Ω–∏—è–º–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ‚Äî –Ω–µ—Ç –ø—Ä–∏–≤—ã—á–Ω—ã—Ö –≤—Å–µ–º –∞–¥—Ä–µ—Å–æ–≤ http —Ñ–æ—Ä–º–∞—Ç–∞, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –≤—Ö–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, TOR –±—Ä–∞—É–∑–µ—Ä).
""",
            'prev': 'osint_services',
            'next': 'onion'
        },
        'onion': {
            'text': """
Onion —Å–µ—Ç—å - —á—Ç–æ —ç—Ç–æ? –ò —Å —á–µ–º –µ–≥–æ –µ–¥—è—Ç?

–û—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ onion —Å–µ—Ç–∏, –∫–∞–∫ –∫ –æ–±—ã—á–Ω–æ–π, —Ç–∞–º –µ—Å—Ç—å –≤—Å–µ —Ç–æ–∂–µ —Å–∞–º–æ–µ: —Ñ–æ—Ä—É–º—ã, –≤–∏–¥–µ–æ—Ö–æ—Å—Ç–∏–Ω–≥–∏, —á–∞—Ç—ã –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ. –†–∞–±–æ—Ç–∞ —Å –Ω–∏–º–∏ —Ç–∞–∫ –∂–µ –Ω–µ –æ—Å–æ–±–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è, –≤–º–µ—Å—Ç–æ –æ–±—ã—á–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Tor, –≤–º–µ—Å—Ç–æ google - torch, duckduckgo onion, –∏ –¥—Ä—É–≥–∏–µ –ª—É–∫–æ–≤—ã–µ –ø–æ–∏—Å–∫–æ–≤–∏–∫–∏.

–¢–æ–ø –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º –≤ onion —Å–µ—Ç–∏ (–¥–∞—Ä–∫–Ω–µ—Ç–µ):

Duckduckgo:
https://duckduckgogg42xjoc72x3sjasowoarfbgcmvfimaftt6twagswzczad.onion/

Torch:
https://torchqsxkllrj2eqaitp5xvcgfeg3g5dr3hr2wnuvnj76bbxkxfiwxqd.onion/

Kraken:
https://krakenai2gmgwwqyo7bcklv2lzcvhe7cxzzva2xpygyax5f33oqnxpad.onion/

Sentor:
https://e27slbec2ykiyo26gfuovaehuzsydffbit5nlxid53kigw3pvz6uosqd.onion/

GDrak:
https://zb2jtkhnbvhkya3d46twv3g7lkobi4s62tjffqmafjibixk6pmq75did.onion/

Ahmia:
https://ahmia.fi
https://juhanurmihxlp77nkq76byazcldy2hlmovfu2epvl5ankdibsot4csyd.onion/

Ourrealm:
http://orealmvxooetglfeguv2vp65a3rig2baq2ljc7jxxs4hsqsrcemkxcad.onion/

Excavator:
https://2fd6cemt4gmccflhm6imvdfvli3nf7zn6rfrwpsy7uhxrgbypvwf5fad.onion/

–î–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–µ –æ–¥–∏–Ω, –∞ —Å—Ä–∞–∑—É –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤.
""",
            'prev': 'netstalking',
            'next': 'telegram_bots'
        },
        'telegram_bots': {
            'text': """
–ü–æ–¥–±–æ—Ä–∫–∞ –±–æ—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è –Ω–∞ –ø—Ä–æ–±–∏–≤–µ –≤ –¢–µ–ª–µ–≥—Ä–∞–º–µ:
https://telegra.ph/BOTY-TELEGRAMM-09-13
""",
            'prev': 'onion',
            'next': 'anonymity'
        },
        'anonymity': {
            'text': """
‚Ä¢ –°–ø–µ—Ä–≤–∞, –ø–æ—á–µ–º—É –≤–æ–æ–±—â–µ –≤–∞–º –Ω—É–∂–Ω–æ –±—ã—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–º–∏? –ù–∞–≤–µ—Ä–Ω—è–∫–∞ –±—É–¥—É—Ç –ª—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–∫–∞–∂—É—Ç: "–ú–Ω–µ –Ω–µ—á–µ–≥–æ —Å–∫—Ä—ã–≤–∞—Ç—å", –æ—Ç–≤–µ—á–∞—é –Ω–∞ —ç—Ç–æ.

‚Ä¢ –ú–æ–∂–µ—Ç –±—ã—Ç—å –≤–∞–º –Ω–µ—á–µ–≥–æ —Å–∫—Ä—ã–≤–∞—Ç—å, –Ω–æ —É –≤–∞—Å –µ—Å—Ç—å –≤—Å–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–∞—â–∏—Ç–∏—Ç—å. –°–º—ã—Å–ª –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏ –Ω–µ –≤ —Ç–æ–º, —á—Ç–æ–±—ã —Å–∫—Ä—ã–≤–∞—Ç—å—Å—è –æ—Ç –∫–æ–≥–æ-—Ç–æ, –∞ –≤ —Ç–æ–º, —á—Ç–æ–±—ã –∑–∞—â–∏—Ç–∏—Ç—å —Å–µ–±—è –∏ —Å–≤–æ—é –ª–∏—á–Ω—É—é –∂–∏–∑–Ω—å. 

‚Ä¢ –ê —Ç–∞–∫ –∂–µ, –Ω—É–∂–Ω–æ —Ä–∞–∑–ª–∏—á–∞—Ç—å:

‚Ä¢ –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å - –ª—é–¥–∏ –∑–Ω–∞—é—Ç, –∫—Ç–æ –≤—ã, –Ω–æ –Ω–µ –∑–Ω–∞—é—Ç, —á—Ç–æ –≤—ã –¥–µ–ª–∞–µ—Ç–µ. 

‚Ä¢ –ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å - –ª—é–¥–∏ –∑–Ω–∞—é—Ç, —á—Ç–æ –≤—ã –¥–µ–ª–∞–µ—Ç–µ, –Ω–æ –Ω–µ –∑–Ω–∞—é—Ç, –∫—Ç–æ –≤—ã.



### –®–∞–≥ 1: –¢—É–Ω–Ω–µ–ª—å –∫ —Å–≤–æ–±–æ–¥–µ
–ü–µ—Ä–≤–æ–µ, —á—Ç–æ –¥–æ–ª–∂–µ–Ω —Å–¥–µ–ª–∞—Ç—å –ª—é–±–æ–π —É–≤–∞–∂–∞—é—â–∏–π —Å–µ–±—è —Ö–∞–∫–µ—Ä –∏–ª–∏ —á–µ–ª–æ–≤–µ–∫, —Å—Ç—Ä–µ–º—è—â–∏–π—Å—è –∫ –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏, ‚Äî —ç—Ç–æ —Å–ø—Ä—è—Ç–∞—Ç—å —Å–≤–æ–π IP. –î–ª—è —ç—Ç–æ–≥–æ —Å—É—â–µ—Å—Ç–≤—É—é—Ç VPN –∏ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞. –ù–æ –±—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω: –Ω–µ –∫–∞–∂–¥—ã–π VPN –æ–¥–∏–Ω–∞–∫–æ–≤–æ –ø–æ–ª–µ–∑–µ–Ω. –ï—Å–ª–∏ –æ–Ω —Ö—Ä–∞–Ω–∏—Ç –ª–æ–≥–∏, —Ç—ã –≤—Å—ë —Ä–∞–≤–Ω–æ –æ—Å—Ç–∞–µ—à—å—Å—è —É—è–∑–≤–∏–º. –ü–æ—ç—Ç–æ–º—É –∏—â–∏ VPN —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π no-logs, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–ª–µ–¥–æ–≤. –î—Ä—É–≥–æ–π –≤–∞–∂–Ω—ã–π —à–∞–≥ ‚Äî –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∏ Tor. –≠—Ç–æ –∫–∞–∫ —Ç—É–Ω–Ω–µ–ª—å –≤–Ω—É—Ç—Ä–∏ —Ç—É–Ω–Ω–µ–ª—è, –≥–¥–µ –∫–∞–∂–¥—ã–π —É–∑–µ–ª –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω, –∞ –ø—É—Ç—å –∫ —Ç–µ–±–µ —É—Å–ª–æ–∂–Ω–µ–Ω.

### –®–∞–≥ 2: –û—Ç–∫–ª—é—á–∏ —Ç—Ä–µ–∫–µ—Ä—ã
–°–ª–µ–¥—É—é—â–µ–µ ‚Äî —ç—Ç–æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ç—Ä–µ–∫–µ—Ä–æ–≤ –∏ –∫—É–∫–∏. –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Å–∞–π—Ç–æ–≤ —Å–æ–±–∏—Ä–∞—é—Ç –æ–≥—Ä–æ–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–≤–æ–µ–º –ø–æ–≤–µ–¥–µ–Ω–∏–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ, —á—Ç–æ –ø–æ—Ç–æ–º –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Ç–∏–≤ —Ç–µ–±—è. –£—Å—Ç–∞–Ω–æ–≤–∏ —Ç–∞–∫–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è, –∫–∞–∫ uBlock Origin –∏–ª–∏ Privacy Badger, —á—Ç–æ–±—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —ç—Ç–∏ –Ω–µ–≤–∏–¥–∏–º—ã–µ —Å–∫—Ä–∏–ø—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–ª–µ–¥—è—Ç –∑–∞ –∫–∞–∂–¥—ã–º —Ç–≤–æ–∏–º –¥–≤–∏–∂–µ–Ω–∏–µ–º.

### –®–∞–≥ 3: –ú–µ–Ω—è–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
–í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π –ª–æ–∂–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏, –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –ø–æ—á—Ç–æ–≤—ã–µ —è—â–∏–∫–∏ –∏, –∫–æ–Ω–µ—á–Ω–æ, –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤. –ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç ‚Äî —ç—Ç–æ –Ω–æ–≤–∞—è –ª–∏—á–Ω–æ—Å—Ç—å. –ü—É—Å—Ç—å —Ç–µ–±—è –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç —Å–≤—è–∑–∞—Ç—å —Å —Ç–≤–æ–∏–º–∏ –Ω–∞—Å—Ç–æ—è—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏.

### –®–∞–≥ 4: –£–±–µ—Ä–∏ –≤—Å–µ –ª–∏—à–Ω–µ–µ
–•–æ—á–µ—à—å –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—ã –≤ —Å–µ—Ç–∏? –û—á–∏—â–∞–π –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–≥—Ä—É–∂–∞–µ—à—å. –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –≥–¥–µ –∏ –∫–æ–≥–¥–∞ –±—ã–ª —Å–æ–∑–¥–∞–Ω —Ñ–∞–π–ª, —Å –∫–∞–∫–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ —Ç.–¥. –≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –≤—ã–¥–∞—Ç—å –±–æ–ª—å—à–µ, —á–µ–º —Ç—ã –¥—É–º–∞–µ—à—å. –î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –≤—Ä–æ–¥–µ ExifTool.

### –ü–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã
–¢–µ–ø–µ—Ä—å –æ —Ç–æ–º, —á—Ç–æ –º–æ–∂–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–∫–∞—á–∞—Ç—å —Ç–≤–æ—é –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å. –ï—Å—Ç—å –æ–¥–∏–Ω **–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Å–∞–π—Ç**, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–∞–Ω–µ—Ç —Ç–≤–æ–∏–º –ª—É—á—à–∏–º –¥—Ä—É–≥–æ–º –Ω–∞ —ç—Ç–æ–º –ø—É—Ç–∏ ‚Äî https://privacytools.io/
–ù–∞ –Ω—ë–º —Å–æ–±—Ä–∞–Ω—ã –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∞–Ω–æ–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –∏ –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –∞–Ω–∞–ª–æ–≥–∏ –æ–±—ã—á–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–ª–∏–≤–∞—é—Ç –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏—è–º. –¢–∞–º –∂–µ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø–æ–ª–µ–∑–Ω—ã–µ –≥–∞–π–¥—ã –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏. –ï—Å–ª–∏ —Ç–µ–±–µ –Ω–µ –±–µ–∑—Ä–∞–∑–ª–∏—á–Ω–∞ —Ç–≤–æ—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å ‚Äî –Ω–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∑–∞–≥–ª—è–Ω—É—Ç—å.
""",
            'prev': 'telegram_bots',
            'next': 'vk'
        },
        'vk': {
            'text': """
–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä–∞–Ω–∏—á–∫–∏ –í–ö - 220VK.
https://new.220vk.com/

–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ö–æ–¥—è—â–∏–µ –ª–∞–π–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –º–æ–∂–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ. –¢–∞–∫ –∂–µ –µ—Å—Ç—å –æ–Ω–ª–∞–π–Ω —Ç—Ä–µ–∫–µ—Ä, –Ω–æ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏ –µ—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ª–∏–º–∏—Ç—ã.
 –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç:

- –û–Ω–ª–∞–π–Ω —Ç—Ä–µ–∫–µ—Ä
- –ü–æ–∏—Å–∫ —Å–∫—Ä—ã—Ç—ã—Ö –¥—Ä—É–∑–µ–π (–†–∞–±–æ—Ç–∞–µ—Ç –Ω–µ –Ω–∞ 100%)
- –ö–æ–º—É —Ü–µ–ª—å —Å—Ç–∞–≤–∏—Ç –ª–∞–π–∫–∏
- –ö–æ–º—É —Ü–µ–ª—å –æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
–ò –¥—Ä—É–≥–∏–µ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã


–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –í–ö, –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä–∞–Ω–∏—á–∫–∏ —Å–Ω–æ–≤–∞ - infoapp.
https://m.vk.com/app7183114

–≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç –∏—Å–∫–∞—Ç—å —Å–∫—Ä—ã—Ç—ã—Ö –¥—Ä—É–∑–µ–π –∏–ª–∏ –∫–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ—Ç —Ü–µ–ª—å, –Ω–æ —É–º–µ–µ—Ç –∫–æ–µ —á—Ç–æ –¥—Ä—É–≥–æ–µ, –∞ –∏–º–µ–Ω–Ω–æ:

- –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ —Å–æ–æ–±—â–µ—Å—Ç–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ü–µ–ª—å —É–∫–∞–∑–∞–Ω–∞ –≤ –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö(–≤–æ–∑–º–æ–∂–Ω–æ –≥—Ä—É–ø–ø—ã —Å–æ–∑–¥–∞–Ω—ã —Ü–µ–ª—å—é)
- –ö–∞–∫–∏–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏ –≤ –í–ö –ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ü–µ–ª—å
- –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –≤–∏–¥–µ–æ–∑–∞–ø–∏—Å–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
- –î—Ä—É–∑—å—è –¥—Ä—É–∑–µ–π
- –ö–∞–∫–∏–µ —Å—Ç–∏–∫–µ—Ä—ã –µ—Å—Ç—å —É —Ü–µ–ª–∏

–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –∏ –≤ —É–º–µ–ª—ã—Ö —Ä—É–∫–∞—Ö –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –≤ –∞–Ω–∞–ª–∏–∑–µ –ª–∏—á–Ω–æ—Å—Ç–∏ –∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø–æ—Ä—Ç—Ä–µ—Ç–∞.

–ö–æ –≤—Å–µ–º—É –ø—Ä–æ—á–µ–º—É –µ—Å—Ç—å –±–æ—Ç –≤ —Ç–µ–ª–µ–≥–∞—Ä–º–µ, –∫–æ—Ç–æ—Ä—ã–π –∏—â–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è: @VKHistoryRobot
""",
            'prev': 'anonymity',
            'next': 'nickname'
        },
        'nickname': {
            'text': """
–ë—ã–ª–æ –ª–∏ —É –≤–∞—Å —Ç–∞–∫–æ–µ, —á—Ç–æ –≤—ã –∑–∞—Ö–æ—Ç–µ–ª–∏ —É–∑–Ω–∞—Ç—å –æ —á–µ–ª–æ–≤–µ–∫–µ —Å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –Ω–∏–∫–Ω–µ–π–º–æ–º, –Ω–æ –Ω–µ –∑–Ω–∞–ª–∏ –∫–∞–∫? –î–ª—è –Ω–∞—á–∞–ª–∞ —ç—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–∏–∫, —É—Å–ª–æ–≤–Ω—ã–π "Arthas", –∞ –Ω–µ "pro100gamer228". 

–ë–æ—Ç—ã ü§ñ

@osint_maigret_bot - –±–æ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ —Ñ–æ—Ä–∫–µ —Å–∫—Ä–∏–ø—Ç–∞ sherlock (–æ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç —Ä–µ—á—å –¥–∞–ª—å—à–µ)
@mailcat_s_bot - –≤—ã–¥–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ—á—Ç—ã –ø–æ –Ω–∏–∫—É
@boxusers1_bot - —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–æ—Ç, —Ç–∞–∫ –∂–µ –∏–º–µ–µ—Ç –ø–æ–∏—Å–∫ –ø–æ —Å–ª–∏—Ç—ã–º –±–∞–∑–∞–º –ø–æ –Ω–∏–∫—É

–°–∞–π—Ç—ã üñ•

search.0t.rocks - —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∞–π—Ç, —Ç–∞–∫ –∂–µ –∏—â–µ—Ç –ø–æ —Å–ª–∏—Ç—ã–º –±–∞–∑–∞–º
whatsmyname.app - —Å–∞–π—Ç –∏—â–µ—Ç –≥–¥–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 

–°–∫—Ä–∏–ø—Ç—ã(GitHub) üìù

Snoop - –ø–ª–∞—Ç–Ω—ã–π, –Ω–æ –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã—Ö OSINT-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –ø–æ –ø–æ–∏—Å–∫—É –Ω–∏–∫–Ω–µ–π–º–æ–≤, –ø–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è –∏—â–µ—Ç –ø–æ 4000 —Å–∞–π—Ç–∞–º [https://github.com/snooppr/snoop]

Sherlock - –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –ø–æ –ø–æ–∏—Å–∫—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –Ω–∏–∫—É [https://github.com/sherlock-project/sherlock]

Enola - —É—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è Sherlock –Ω–∞–ø–∏—Å–∞–Ω–Ω–∞—è –Ω–∞ golang [https://github.com/TheYahya/enola]
""",
            'prev': 'vk',
            'next': 'searchtg'
        },
        'searchtg': {
            'text': """
–ü–æ–¥–æ–±—Ä–∞–ª –¥–ª—è –≤–∞—Å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–∏—Å–∫–æ–≤–∏–∫ –ø–æ —Ç–µ–ª–µ–≥—Ä–∞–º—É, —ç—Ç–æ –Ω–µ –≤—Å–µ –∏ –µ—Å–ª–∏ –≤–∞–º –±—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞ —ç—Ç–∞ —Ç–µ–º–∞, –±—É–¥–µ—Ç –µ—â–µ –æ–¥–∏–Ω –ø–æ—Å—Ç.

‚Ä¢ –¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç @MotherSearchBot - –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π –∫–∞–Ω–∞–ª, —Ç–µ–∫—Å—Ç, –∞—É–¥–∏–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç.

‚Ä¢ –¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç @TGStat_Bot -  –ø–æ–∫–∞–∂–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ª—é–±–æ–≥–æ –∫–∞–Ω–∞–ª–∞, –≥—Ä—É–ø–ø—ã, –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram.

‚Ä¢ https://lyzem.com/ - –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–π –ø–æ–∏—Å–∫–æ–≤–∏–∫ –ø–æ —Ç–µ–ª–µ–≥—Ä–∞–º/Telegraph.

‚Ä¢ https://cse.google.com/cse?cx=006368593537057042503%3Aefxu7xprihg&ref=exploit.media#gsc.tab=0 - —Å–µ—Ä–≤–∏—Å –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π –≥—É–≥–ª –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ —á–∞—Ç–∞–º –∏ –∫–∞–Ω–∞–ª–∞–º.

‚Ä¢ https://cse.google.com/cse?cx=f4046a4505f1e4b48 - –µ—â–µ –æ–¥–∏–Ω —Å–µ—Ä–≤–∏—Å –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π –≥—É–≥–ª –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ —á–∞—Ç–∞–º –∏ –∫–∞–Ω–∞–ª–∞–º.
""",
            'prev': 'nickname',
    'next': 'car'
},

        'car': {
        'text': """
–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≥–æ—Å. –Ω–æ–º–µ—Ä—É –º–∞—à–∏–Ω—ã.

–°–∞–π—Ç—ã üñ•

‚Ä¢ unda - https://www.unda.com.ua/proverka-gosnomer-UA
‚Ä¢ vin01 - https://vin01.ru/
‚Ä¢ vinformer - https://vinformer.su/
‚Ä¢ avtokompromat - https://avtokompromat.ru/user/gosvin.php

–í—Å–µ 4 –∏–º–µ—é—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, –Ω–æ –∏–Ω–æ–≥–¥–∞ –Ω–∞ –æ–¥–Ω–æ–º —Å–∞–π—Ç–µ –µ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä–æ–π –Ω–µ—Ç –Ω–∞ –¥—Ä—É–≥–∏—Ö, —Ç–∞–∫ —á—Ç–æ –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.

–ë–æ—Ç—ã ü§ñ

‚Ä¢ UniversalSearch - @UniversalSearchEasyBot
‚Ä¢ GTASearch - @Iditinahyubot
‚Ä¢ QuickOSINT - @tearch_bot

–ë–æ—Ç—ã –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã, –Ω–æ –∏–º–µ–Ω–Ω–æ –≤ –Ω–∏—Ö –ø–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É –∞–≤—Ç–æ –º–Ω–µ –ø—Ä–∏–≥–ª—è–Ω—É–ª—Å—è –±–æ–ª—å—à–µ.
""",
        'prev': 'searchtg',  # –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª
    'next': 'intelligence_x' # —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª
},
         'intelligence_x': {
            'text': """
Intelligence X (intelx.io) ‚Äî —ç—Ç–æ –ø–æ–∏—Å–∫–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤, –≤–∫–ª—é—á–∞—è –≤–µ–±, –¥–∞—Ä–∫–Ω–µ—Ç –∏ —É—Ç–µ—á–∫–∏ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö. –û–Ω–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–∫–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –¥–æ–º–µ–Ω–∞–º, IP-–∞–¥—Ä–µ—Å–∞–º, email –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —É—Ç–µ–∫—à–∏–µ –ø–∞—Ä–æ–ª–∏, –ª–æ–≥–∏ –∏ —Ñ–∞–π–ª—ã. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –∏—Å–∫–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –¥–æ—Å—Ç—É–ø–µ, —Ç–∞–∫ –∏ –≤ –∑–∞–∫—Ä—ã—Ç—ã—Ö —Å–µ—Ç—è—Ö. –°–µ—Ä–≤–∏—Å –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∏ –ø–ª–∞—Ç–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã, —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞.
""",
            'prev': 'car',
            'next': 'webwhois'
},
               'webwhois': {
            'text': """
–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–æ–≤ Web-Check

‚Ä¢ Web-check - –û–°–ò–ù–¢ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Ä–∞–±–æ—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤–µ–±-—Å–∞–π—Ç–∞.

‚Ä¢ –í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –Ω–∞ –ø–∞–Ω–µ–ª–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ IP, —Ü–µ–ø–æ—á–∫–∞ SSL, –∑–∞–ø–∏—Å–∏ DNS, —Ñ–∞–π–ª—ã cookie, –∑–∞–≥–æ–ª–æ–≤–∫–∏, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–º–µ–Ω–µ, –ø—Ä–∞–≤–∏–ª–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –ø–æ–∏—Å–∫–µ, –∫–∞—Ä—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü, –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞, —Ä–µ–µ—Å—Ç—Ä –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π, –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã, —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞, —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ DNS, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞, —Ç—Ä–µ–∫–µ—Ä—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∏–º–µ–Ω–∞ —Ö–æ—Å—Ç–æ–≤, —É–≥–ª–µ—Ä–æ–¥–Ω—ã–π —Å–ª–µ–¥.

‚Ä¢ –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–∞–π—Ç–∞ –∏ –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–∑–≤–µ–¥–∫–∏.

–°–∞–π—Ç: Web-Check.xyz
GitHub: github.com/Lissy93/web-check

-----------

‚Ä¢ Wayback Machine - —Å–º–æ—Ç—Ä–∏–º, —Ä–∞–∑–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ —Ç–æ–≥–æ, –∫–∞–∫ –≤—ã–≥–ª—è–¥–µ–ª –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–∞–π—Ç —Ä–∞–Ω–µ–µ.

–°–∞–π—Ç: https://archive.org
""",
            'prev': 'intelligence_x',
            'next': 'terms'
},

'terms': {
            'text': """
OSINT (Open Source Intelligence) ‚Äî —ç—Ç–æ —Ä–∞–∑–≤–µ–¥–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤. –û–Ω–∞ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —Å–±–æ—Ä, –∞–Ω–∞–ª–∏–∑ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –¥–æ—Å—Ç—É–ø–Ω–∞ –∏–∑ –ø—É–±–ª–∏—á–Ω—ã—Ö, –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤, —Ç–∞–∫–∏—Ö –∫–∞–∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏, –±–ª–æ–≥–∏, –Ω–æ–≤–æ—Å—Ç–Ω—ã–µ —Å–∞–π—Ç—ã, –ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã, –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –¥—Ä—É–≥–∏–µ –æ–±—â–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã.

Doxing ‚Äî —ç—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –ø—É–±–ª–∏—á–Ω–æ–≥–æ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–µ–ª–æ–≤–µ–∫–µ –±–µ–∑ –µ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è. –≠—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –º–æ–∂–µ—Ç –≤–∫–ª—é—á–∞—Ç—å –∏–º—è, –∞–¥—Ä–µ—Å, —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä, —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É, —Å–µ–º–µ–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –¥—Ä—É–≥–∏–µ –ª–∏—á–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è. –ß–∞—Å—Ç–æ –¥–æ–∫—Å–∏–Ω–≥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞–Ω–µ—Å—Ç–∏ –≤—Ä–µ–¥ –∏–ª–∏ –∑–∞–ø—É–≥–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–∞, —Ä–∞—Å–∫—Ä—ã–≤ –µ–≥–æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ú–µ—Ç–æ–¥—ã –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –º–æ–≥—É—Ç –≤–∞—Ä—å–∏—Ä–æ–≤–∞—Ç—å—Å—è: –æ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–±—â–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤, —Ç–∞–∫–∏—Ö –∫–∞–∫ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏, –¥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤ OSINT, –æ –∫–æ—Ç–æ—Ä—ã—Ö –º—ã —Ä–∞–Ω–µ–µ –≥–æ–≤–æ—Ä–∏–ª–∏.


SWAT ‚Äî —ç—Ç–æ –∫–∏–±–µ—Ä-–∞—Ç–∞–∫–∞, –∫–æ–≥–¥–∞ –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫–∏ –¥–µ–ª–∞—é—Ç –ª–æ–∂–Ω—ã–µ –≤—ã–∑–æ–≤—ã –≤ –ø–æ–ª–∏—Ü–∏—é, —á—Ç–æ–±—ã —É—Å—Ç—Ä–æ–∏—Ç—å —Å–ø–µ—Ü–æ–ø–µ—Ä–∞—Ü–∏—é —É –∂–µ—Ä—Ç–≤—ã, –æ–±—ã—á–Ω–æ —Å —É—á–∞—Å—Ç–∏–µ–º SWAT. –û–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Å–æ—Ü–∏–∞–ª—å–Ω—É—é –∏–Ω–∂–µ–Ω–µ—Ä–∏—é –∏ –ø–æ–¥–¥–µ–ª–∫—É –¥–∞–Ω–Ω—ã—Ö, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ª–æ–∂–Ω–æ–µ –æ—â—É—â–µ–Ω–∏–µ —É–≥—Ä–æ–∑—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–ª–æ–∂–Ω–∏–∫–æ–≤ –∏–ª–∏ –±–æ–º–±—ã. –≠—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –æ–ø–∞—Å–Ω—ã–º –∏ —É–Ω–∏–∑–∏—Ç–µ–ª—å–Ω—ã–º —Å–∏—Ç—É–∞—Ü–∏—è–º –¥–ª—è –∂–µ—Ä—Ç–≤—ã –∏ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Å–µ—Ä—å–µ–∑–Ω—ã–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è.


–î–µ–∞–Ω–æ–Ω ‚Äî —ç—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Ä–µ–∞–ª—å–Ω–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏ –∏–ª–∏ –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏ —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–Ω–µ–µ –æ—Å—Ç–∞–≤–∞–ª—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–º –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ. –û–±—ã—á–Ω–æ —ç—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—É—Ç—ë–º —Å–±–æ—Ä–∞, –∞–Ω–∞–ª–∏–∑–∞ –∏ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, —Ç–∞–∫–∏—Ö –∫–∞–∫ IP-–∞–¥—Ä–µ—Å–∞, –∞–∫–∫–∞—É–Ω—Ç—ã –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏ –¥—Ä—É–≥–∞—è –ª–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –¥–æ—Å—Ç—É–ø–Ω–∞—è –≤ —Å–µ—Ç–∏. –¶–µ–ª—å –¥–µ–∞–Ω–æ–Ω–∞ –º–æ–∂–µ—Ç –≤–∞—Ä—å–∏—Ä–æ–≤–∞—Ç—å—Å—è: –æ—Ç –ª–∏—á–Ω—ã—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –∏ —à–∞–Ω—Ç–∞–∂–∞ –¥–æ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π.

DDoS (Distributed Denial of Service) –∞—Ç–∞–∫–∞ ‚Äî —ç—Ç–æ –ø–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä–≤–µ—Ä, —Å–µ—Ç—å –∏–ª–∏ –¥—Ä—É–≥–æ–µ —Å–µ—Ç–µ–≤–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, —á—Ç–æ–±—ã –æ–Ω–∏ –Ω–µ –º–æ–≥–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å —É—Å–ª—É–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º. –≠—Ç–æ –¥–æ—Å—Ç–∏–≥–∞–µ—Ç—Å—è –ø—É—Ç—ë–º –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–æ–ª—å—à–æ–≥–æ –æ–±—ä–µ–º–∞ —Ç—Ä–∞—Ñ–∏–∫–∞ –Ω–∞ —Ü–µ–ª–µ–≤—É—é —Å–∏—Å—Ç–µ–º—É. –ê—Ç–∞–∫–∏ DDoS –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ü–µ–ª–∏ –∏ –∏–º–µ—é—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ñ–æ—Ä–º.

–§–∏—à–∏–Ω–≥ ‚Äî —ç—Ç–æ —Ñ–æ—Ä–º–∞ –∫–∏–±–µ—Ä–ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫–∏ –ø—ã—Ç–∞—é—Ç—Å—è –æ–±–º–∞–Ω–Ω—ã–º –ø—É—Ç–µ–º –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —É –∂–µ—Ä—Ç–≤—ã, —Ç–∞–∫—É—é –∫–∞–∫ –ª–æ–≥–∏–Ω—ã, –ø–∞—Ä–æ–ª–∏, –¥–∞–Ω–Ω—ã–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –∫–∞—Ä—Ç, –∏–ª–∏ –¥—Ä—É–≥–∏–µ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –≠—Ç–æ –¥–æ—Å—Ç–∏–≥–∞–µ—Ç—Å—è –ø—É—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–≥–ª—è–¥—è—Ç –∫–∞–∫ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –ø–∏—Å—å–º–∞ –æ—Ç –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±–∞–Ω–∫–æ–≤, —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π, –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π), –Ω–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç –∂–µ—Ä—Ç–≤—É –Ω–∞ –ø–æ–¥–¥–µ–ª—å–Ω—ã–π —Å–∞–π—Ç, –∏–º–∏—Ç–∏—Ä—É—é—â–∏–π –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π. –ù–∞ —ç—Ç–æ–º —Ñ–∞–ª—å—à–∏–≤–æ–º —Å–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å–≤–æ—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –¥—É–º–∞—è, —á—Ç–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å –∑–∞–∫–æ–Ω–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π, –∞ –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫–∏ —Å–æ–±–∏—Ä–∞—é—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö.

–°–∫–≤–æ—Ç—Ç–∏–Ω–≥ –¥–æ–º–µ–Ω–æ–≤ ‚Äî —ç—Ç–æ –ø—Ä–∞–∫—Ç–∏–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –ø–æ–∫—É–ø–∫–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–æ–º–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç –∏–ª–∏ –æ—á–µ–Ω—å –ø–æ—Ö–æ–∂–∏ –Ω–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ—Ä–≥–æ–≤—ã–µ –º–∞—Ä–∫–∏, –∏–º–µ–Ω–∞ –∫–æ–º–ø–∞–Ω–∏–π –∏–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π, —Å —Ü–µ–ª—å—é –∏—Ö –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∏ —Å –ø—Ä–∏–±—ã–ª—å—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö —Ü–µ–ª—è—Ö.

–ë—Ä—É—Ç—Ñ–æ—Ä—Å (–∏–ª–∏ –º–µ—Ç–æ–¥ –ø–µ—Ä–µ–±–æ—Ä–∞, brute force) ‚Äî —ç—Ç–æ –º–µ—Ç–æ–¥ –∞—Ç–∞–∫–∏ –Ω–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª–µ–π, –∫–ª—é—á–µ–π –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.

–ö–∏–±–µ—Ä—Å—Ç–∞–ª–∫–∏–Ω–≥ ‚Äî —ç—Ç–æ —Ñ–æ—Ä–º–∞ –ø—Ä–µ—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏–ª–∏ –¥–æ–º–æ–≥–∞—Ç–µ–ª—å—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä–∞—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, —Ç–∞–∫–∏—Ö –∫–∞–∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏, —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞, –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã –∏ –¥—Ä—É–≥–∏–µ –æ–Ω–ª–∞–π–Ω-–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏. –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å—Ç–∞–ª–∫–∏–Ω–≥–∞, –∫–∏–±–µ—Ä—Å—Ç–∞–ª–∫–∏–Ω–≥ –º–æ–∂–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏, –∏ –∂–µ—Ä—Ç–≤—ã –º–æ–≥—É—Ç –ø–æ–¥–≤–µ—Ä–≥–∞—Ç—å—Å—è –ø—Ä–µ—Å–ª–µ–¥–æ–≤–∞–Ω–∏—é –∏–∑ –ª—é–±–æ–π —Ç–æ—á–∫–∏ –º–∏—Ä–∞.

–§–∞—Ä–º–∏–Ω–≥ ‚Äî –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂–µ—Ä—Ç–≤—ã —Å –ª–µ–≥–∏—Ç–∏–º–Ω–æ–≥–æ —Å–∞–π—Ç–∞ –Ω–∞ —Ñ–µ–π–∫–æ–≤—ã–π, –≥–¥–µ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ, –ø–æ–¥–æ–±–Ω–æ —Ñ–∏—à–∏–Ω–≥—É, –Ω–æ —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç–æ–¥–æ–≤.

SQL-–∏–Ω—ä–µ–∫—Ü–∏—è ‚Äî —Å–ø–æ—Å–æ–± –≤–∑–ª–æ–º–∞ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã—Ö SQL-–∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –ø–æ–ª—è –≤–≤–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç–∞—Ö. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ª–∏—á–Ω—ã–º –¥–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
""",
            'prev': 'webwhois',
            'next': 'photo'
},

'photo': {
            'text': """
–£–∑–Ω–∞–π –º–µ—Å—Ç–æ –ø–æ —Ñ–æ—Ç–∫–µ.

‚Ä¢ GeoSpy AI [https://geospy.ai] - –ø–æ–ª–µ–∑–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.

‚Ä¢ –í—ã–¥–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –∏ –ø—Ä–∏–º–µ—Ä–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.

‚Ä¢ GeoSpy AI –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –Ω–∞ –æ–±—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∞ —É—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏, —á—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, —Ç–∞–∫ —á—Ç–æ —Å–æ–≤–µ—Ç—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–æ—Ç–æ.

‚Ä¢ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –Ω–µ –≤—Å–µ–≥–¥–∞ —Ç–æ—á–µ–Ω: –∑–∞—á–∞—Å—Ç—É—é –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –æ–±—â—É—é —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é, –Ω–∞–ø—Ä–∏–º–µ—Ä –±–æ–ª—å—à–æ–π –≥–æ—Ä–æ–¥.
""",
            'prev': 'terms',
            'next': 'osintetaps'
},

'osintetaps': {
            'text': """
‚Ä¢ –°–µ–≥–æ–¥–Ω—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º —Ä–∞–∑–≤–µ–¥—ã–≤–∞—Ç–µ–ª—å–Ω—ã–π —Ü–∏–∫–ª, –∞ —Ç–æ—á–Ω–µ–µ –µ–≥–æ —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∏–µ.

‚Ä¢ –†–∞–∑–≤–µ–¥—ã–≤–∞—Ç–µ–ª—å–Ω—ã–π —Ü–∏–∫–ª —Å–æ—Å—Ç–æ–∏—Ç –∏–∑:

‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ü–µ–ª–∏.
‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–æ—á–µ–∫ –≤—Ö–æ–¥–∞.
‚Ä¢ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –≥–∏–ø–æ—Ç–µ–∑—ã.
‚Ä¢ –°–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö.
‚Ä¢ –ê–Ω–∞–ª–∏–∑–∞ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∏ –≥–∏–ø–æ—Ç–µ–∑.
‚Ä¢ –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏.
‚Ä¢ –ü–æ–¥–≤–µ–¥–µ–Ω–∏—è –∏—Ç–æ–≥–æ–≤.
""",
            'prev': 'photo',
            'next': 'vpns'
},

'vpns': {
            'text': """
‚Ä¢ VPN - Virtual Private Network -  –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –ß–∞—Å—Ç–Ω–∞—è –°–µ—Ç—å - —ç—Ç–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è, –ø–æ–∑–≤–æ–ª—è—é—â–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ –∏ –∞–Ω–æ–Ω–∏–º–Ω–æ –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É. –û–Ω–∞ —Å–æ–∑–¥–∞–µ—Ç –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç—É–Ω–Ω–µ–ª—å –º–µ–∂–¥—É –≤–∞—à–∏–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º –∏ VPN-—Å–µ—Ä–≤–µ—Ä–æ–º, —Å–∫—Ä—ã–≤–∞—è –≤–∞—à IP-–∞–¥—Ä–µ—Å –∏ —à–∏—Ñ—Ä—É—è –≤–µ—Å—å –≤–∞—à —Ç—Ä–∞—Ñ–∏–∫.
‚Ä¢ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?
‚Ä¢ –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç –ø—Ä–æ—Å–∫–∏, –∫–æ—Ç–æ—Ä—ã–π –ø–æ —Å—É—Ç–∏ –ø—Ä–æ—Å—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–º –º–µ–∂–¥—É –≤–∞–º–∏ –∏ —Å–µ—Ä–≤–µ—Ä–æ–º, VPN –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞. 


    
–õ—É—á—à–∏–µ VPN —Å–µ—Ä–≤–∏—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º —Å–∫—Ä—ã—Ç—å—Å—è:

‚Ä¢ Lantern [https://play.google.com/store/apps/details?id=org.getlantern.lantern] ‚Äî —Å–æ–∑–¥–∞–µ—Ç –æ–¥–Ω–æ—Ä–∞–Ω–≥–æ–≤—É—é –ø–∏—Ä–∏–Ω–≥–æ–≤—É—é —Å–µ—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π IPFS, –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç VPN –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–µ—Ç–∏.
‚Ä¢ –ß—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç?
‚Ä¢ –û–¥–Ω–æ—Ä–∞–Ω–≥–æ–≤–∞—è - –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–µ—Ç–∏ —Ä–∞–≤–Ω—ã –º–µ–∂–¥—É —Å–æ–±–æ–π.
‚Ä¢ –î–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è -  –∫–∞–∂–¥—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ —Å–µ—Ç–∏ —è–≤–ª—è–µ—Ç—Å—è —É–∑–ª–æ–º.
‚Ä¢ –£ lantern –µ—Å—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ –¥–µ–ª–∏—Ç—å—Å—è —Ñ–∞–π–ª–∞–º–∏, –≤—Å–µ —Ç–∞–∫ –∂–µ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–æ, —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –µ—Å–ª–∏ –≤—ã –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª, –≤—ã —É–∂–µ –Ω–µ —Å–º–æ–∂–µ—Ç–µ –µ–≥–æ —É–¥–∞–ª–∏—Ç—å.
‚Ä¢ Lantern –µ—Å—Ç—å –Ω–∞ –ª—é–±—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏ –∏ –æ–Ω —Ç–∞–∫ –∂–µ –ª–µ–≥–æ–∫ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ.

–ê —Ç–∞–∫ –∂–µ VPN –æ—Ç Samsung:

‚Ä¢ Samsung Max VPN [https://play.google.com/store/apps/details?id=com.opera.max.global] ‚Äî –≤–ø–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∏–º–µ–µ—Ç –∑–∞—â–∏—Ç—É –ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, —ç–∫–æ–Ω–æ–º–∏—é —Ç—Ä–∞—Ñ–∏–∫–∞, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –æ–±–ª–∞–∫—É, –≤–∫–ª—é—á–µ–Ω–∏–µ –∑–∞—â–∏—Ç–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏, –∏–∑–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ DNS —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏ —Ç–∞–∫-–∂–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∏ Wi-Fi
""",
            'prev': 'osintetaps',
            'next': 'hackermistakes'
},

'hackermistakes': {
            'text': """
–¢–∏–ø–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏ —Ö–∞–∫–µ—Ä–æ–≤.

‚Ä¢ –í —ç—Ç–æ–º –ø–æ—Å—Ç–µ –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º, –∫–∞–∫–∏–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –¥–µ–∞–Ω–æ–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –∏ –ø–æ–∏–º–∫–µ —Ö–∞–∫–µ—Ä–æ–≤.

‚Ä¢ –ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —Ö–∞–∫–µ—Ä–æ–≤ –≥—É–±—è—Ç –Ω–µ —Å—É–ø–µ—Ä—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –Ω–µ –∫–∏–±–µ—Ä—Å–ø–µ—Ü–∞–≥–µ–Ω—Ç—ã. –ì–ª—É–ø–æ—Å—Ç—å, –ª–µ–Ω—å, –∏ –∏–∑–ª–∏—à–Ω—è—è —Å–∞–º–æ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å - –≤–æ—Ç —á—Ç–æ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π.

‚Ä¢ –õ–µ–Ω—å.

‚Ä¢ –õ—é–±–æ–π —á–µ–ª–æ–≤–µ–∫ –ø–æ–¥–≤–µ—Ä–∂–µ–Ω –ª–µ–Ω–∏, –∫–∞–∫ —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–π ip –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º. –í–¥—Ä—É–≥ VPN –¥–∞–ª —Å–±–æ–π –∏–ª–∏ –≤—ã –≤–æ–≤—Å–µ –∑–∞–±—ã–ª–∏ –µ–≥–æ –≤–∫–ª—é—á–∏—Ç—å. –ï—Å–ª–∏ —ç—Ç–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ, —á—Ç–æ –æ—Ç–¥–µ–ª—è–µ—Ç –≤–∞—Å –æ—Ç –Ω–µ–∑–∞–∫–æ–Ω–Ω—ã—Ö –¥–µ–ª, –Ω–µ –ø–æ–ª–µ–Ω–∏—Ç–µ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.

‚Ä¢ –°–∞–º–æ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å.

‚Ä¢ –ù–µ —Å—á–∏—Ç–∞–π—Ç–µ —Å–µ–±—è –≤—Å–µ–º–æ–≥—É—â–∏–º, –Ω–µ –¥—É–º–∞–π—Ç–µ, —á—Ç–æ –≤–∞—Å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏. –°–∫–æ–ª—å–∫–æ –±—ã —Å–ª–æ–µ–≤ –∑–∞—â–∏—Ç—ã –≤–∞—Å –Ω–µ –∑–∞—â–∏—â–∞–ª–æ, –≤ —Ç–µ–æ—Ä–∏–∏ –≤—Å–µ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –≤—ã—á–∏—Å–ª–∏—Ç—å, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –æ—Ç–¥–µ–ª—è–π—Ç–µ —Å–≤–æ—é –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—É—é –∂–∏–∑–Ω—å –æ—Ç –Ω–µ–∑–∞–∫–æ–Ω–Ω–æ–π. –°—Ç–∞–≤—å—Ç–µ —Å–ª–æ–∂–Ω—ã–µ –ø–∞—Ä–æ–ª–∏, –¥–∞–∂–µ –µ—Å–ª–∏ –¥—É–º–∞–µ—Ç–µ, —á—Ç–æ –≤–∞—Å –Ω–µ –Ω–∞–π–¥—É—Ç.

‚Ä¢ –ì–ª—É–ø–æ—Å—Ç—å.

‚Ä¢ –ï—Å–ª–∏ —É–∂ –∏ –¥—É–º–∞–µ—Ç–µ –¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–µ–∑–∞–∫–æ–Ω–Ω–æ–µ, —Ç–æ –∏–∑—É—á–∏—Ç–µ –≤—Å–µ –ø–æ–¥–≤–æ–¥–Ω—ã–µ –∫–∞–º–Ω–∏, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –∫–∞–Ω–∞–ª—ã —Å–≤—è–∑–∏, –Ω–µ –æ—Å—Ç–∞–≤–ª—è–π—Ç–µ —Å–ª–µ–¥–æ–≤, –Ω—É –∏ –Ω–µ —Ä–∞—Å—Å–∫—Ä—ã–≤–∞–π—Ç–µ —Å–≤–æ—é –ª–∏—á–Ω–æ—Å—Ç—å.

‚Ä¢ –≠—Ç–∏ 3 –æ—á–µ–≤–∏–¥–Ω—ã—Ö –∏ –≥–ª—É–ø—ã—Ö –æ—à–∏–±–∫–∏ —Å—Ç–æ–∏–ª–∏ —Ç—é—Ä–µ–º–Ω–æ–≥–æ —Å—Ä–æ–∫–∞ –º–Ω–æ–≥–∏–º —Ö–∞–∫–µ—Ä–∞–º, —Ç–∞–∫ —á—Ç–æ –Ω–µ –±—É–¥—å—Ç–µ –ª–µ–Ω–∏–≤—ã–º–∏, –≥–ª—É–ø—ã–º–∏ –∏ —Å–∞–º–æ—É–≤–µ—Ä–µ–Ω–Ω—ã–º–∏.
""",
            'prev': 'vpns',
            'next': 'googledork'
},

'googledork': {
            'text': """
https://telegra.ph/Google-Dork-09-11
""",
            'prev': 'hackermistakes',
            'next': 'vpntoproxy'
},
'vpntoproxy': {
            'text': """
–í—Å—ë –æ VPN:

1. –ü–æ–ª–∏—Ç–∏–∫–∞ NO-LOG (–±–µ–∑ –≤–µ–¥–µ–Ω–∏—è –∂—É—Ä–Ω–∞–ª–æ–≤)
   - –ù–∞—Å—Ç–æ—è—â–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ no-log, –∫–æ—Ç–æ—Ä–∞—è –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ VPN –Ω–µ –≤–µ–¥–µ—Ç —É—á–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –ø–æ—Å–µ—â–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã, IP-–∞–¥—Ä–µ—Å–∞, –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π, –æ–±—ä–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –¥—Ä—É–≥–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ.
   - –í –∏–¥–µ–∞–ª–µ, —ç—Ç—É –ø–æ–ª–∏—Ç–∏–∫—É –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–µ–∑–∞–≤–∏—Å–∏–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–Ω–∏–º–∏ –∞—É–¥–∏—Ç–æ—Ä–∞–º–∏.

2. –°–∏–ª—å–Ω–æ–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ
   - –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ AES-256 (Advanced Encryption Standard) ‚Äî —ç—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç –≤–æ–µ–Ω–Ω–æ–π –∏ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.
   - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Perfect Forward Secrecy (PFS) ‚Äî —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è, –∫–æ—Ç–æ—Ä–∞—è –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ–∞–Ω—Å–∞, —á—Ç–æ–±—ã –≤–∑–ª–æ–º –æ–¥–Ω–æ–≥–æ –∫–ª—é—á–∞ –Ω–µ —Å–∫–æ–º–ø—Ä–æ–º–µ—Ç–∏—Ä–æ–≤–∞–ª –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é —Å–µ–∞–Ω—Å–æ–≤.

3. –ü—Ä–æ—Ç–æ–∫–æ–ª—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   - VPN –¥–æ–ª–∂–µ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–∞–¥–µ–∂–Ω—ã—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤, —Ç–∞–∫–∏—Ö –∫–∞–∫ **OpenVPN**, **WireGuard**, –∏–ª–∏ **IKEv2/IPSec**. –≠—Ç–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –±—ã—Å—Ç—Ä—É—é –ø–µ—Ä–µ–¥–∞—á—É –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã—Å–æ–∫—É—é –∑–∞—â–∏—Ç—É.
   - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Stealth Mode –∏–ª–∏ Obfuscation (–∑–∞–º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π VPN) –¥–ª—è –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –≤ —Å—Ç—Ä–∞–Ω–∞—Ö —Å –∂–µ—Å—Ç–∫–æ–π —Ü–µ–Ω–∑—É—Ä–æ–π.

4. Kill Switch (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ)
   - Kill Switch ‚Äî —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑—Ä—ã–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ VPN –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ –æ—Ç–∫–ª—é—á–∏–ª—Å—è. –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç —É—Ç–µ—á–∫—É –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –Ω–µ–∑–∞—â–∏—â–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.

5. DNS –∏ IP –∑–∞—â–∏—Ç–∞ –æ—Ç —É—Ç–µ—á–µ–∫
   - VPN –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —É—Ç–µ—á–µ–∫ DNS, IP –∏ WebRTC (–∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Ä–∞—Å–∫—Ä—ã—Ç—å –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π IP-–∞–¥—Ä–µ—Å –∏–ª–∏ DNS-–∑–∞–ø—Ä–æ—Å—ã).
   
6. –ú–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ (Double VPN)
   - Double VPN (–∏–ª–∏ MultiHop) ‚Äî —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ç—Ä–∞—Ñ–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –¥–≤–∞ —Ä–∞–∑–Ω—ã—Ö VPN-—Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∑–∞—â–∏—Ç—É –∏ –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å.

7. –†–∞–∑–¥–µ–ª—å–Ω–æ–µ —Ç—É–Ω–Ω–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ (Split Tunneling)
   - –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±–∏—Ä–∞—Ç—å, –∫–∞–∫–æ–π —Ç—Ä–∞—Ñ–∏–∫ –∏–¥–µ—Ç —á–µ—Ä–µ–∑ VPN, –∞ –∫–∞–∫–æ–π ‚Äî –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç. –≠—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.

8. –ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç —é—Ä–∏—Å–¥–∏–∫—Ü–∏–π —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ–º –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö
   - VPN –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Å—Ç—Ä–∞–Ω–µ, –≥–¥–µ –Ω–µ—Ç –∑–∞–∫–æ–Ω–æ–≤ –æ —Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, –®–≤–µ–π—Ü–∞—Ä–∏—è, –ü–∞–Ω–∞–º–∞, –ò—Å–ª–∞–Ω–¥–∏—è). –≠—Ç–æ –∑–∞—â–∏—Ç–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –≤–ª–∞—Å—Ç–µ–π –æ –ø–µ—Ä–µ–¥–∞—á–µ –¥–∞–Ω–Ω—ã—Ö.
   - –û–Ω –¥–æ–ª–∂–µ–Ω –Ω–µ –ø–æ–¥—á–∏–Ω—è—Ç—å—Å—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º —Å–æ–≥–ª–∞—à–µ–Ω–∏—è–º –æ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–º –¥–æ—Å—Ç—É–ø–µ –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —Ç–∞–∫–∏–º –∫–∞–∫ 5/9/14-Eyes Alliances (–∞–ª—å—è–Ω—Å—ã —Å—Ç—Ä–∞–Ω –ø–æ –æ–±–º–µ–Ω—É —Ä–∞–∑–≤–µ–¥–¥–∞–Ω–Ω—ã–º–∏).

9. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Tor over VPN (–∏–ª–∏ Onion over VPN)
   - –≠—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ—Ç—å Tor —á–µ—Ä–µ–∑ VPN –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏. –¢—Ä–∞—Ñ–∏–∫ —Å–Ω–∞—á–∞–ª–∞ —à–∏—Ñ—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ VPN, –∞ –∑–∞—Ç–µ–º –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ —É–∑–ª—ã —Å–µ—Ç–∏ Tor, –¥–æ–±–∞–≤–ª—è—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å–ª–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.

10. –ê–Ω–æ–Ω–∏–º–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã
   - VPN –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã (Bitcoin, Monero), –ø–æ–¥–∞—Ä–æ—á–Ω—ã–µ –∫–∞—Ä—Ç—ã, —á—Ç–æ–±—ã –∏—Å–∫–ª—é—á–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ª–∏—á–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.

11. –ú–∞—Å–∫–∏—Ä–æ–≤–∫–∞ —Ç—Ä–∞—Ñ–∏–∫–∞ (Obfuscation)
   - VPN –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –º–∞—Å–∫–∏—Ä–æ–≤–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –≤—ã–≥–ª—è–¥–µ–ª –∫–∞–∫ —Ç—Ä–∞—Ñ–∏–∫ VPN. –≠—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –≤ —Å—Ç—Ä–∞–Ω–∞—Ö, –≥–¥–µ –±–ª–æ–∫–∏—Ä—É—é—Ç VPN (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ö–∏—Ç–∞–π, –†–æ—Å—Å–∏—è, –ò—Ä–∞–Ω).

12. –ë—ã—Å—Ç—Ä–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —à–∏—Ä–æ–∫–∞—è —Å–µ—Ç—å —Å–µ—Ä–≤–µ—Ä–æ–≤
   - –ù–∞–ª–∏—á–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –≤—ã—Å–æ–∫–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –æ–±—Ö–æ–¥–∞ –≥–µ–æ-–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫. –ß–µ–º –±–æ–ª—å—à–µ —Å–µ—Ä–≤–µ—Ä–æ–≤, —Ç–µ–º –º–µ–Ω—å—à–µ –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∞ –∏ –±–æ–ª—å—à–µ –≤—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.
   
13. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º
   - VPN –¥–æ–ª–∂–µ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã (Windows, MacOS, Linux, iOS, Android), –∞ —Ç–∞–∫–∂–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —Ç–∏–ø–∞ —Ä–æ—É—Ç–µ—Ä–æ–≤, —Å–º–∞—Ä—Ç-–¢–í –∏ –∏–≥—Ä–æ–≤—ã—Ö –∫–æ–Ω—Å–æ–ª–µ–π.

14. –ù–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –∞—É–¥–∏—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   - –î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–≤–æ–µ–π –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏, VPN –¥–æ–ª–∂–µ–Ω —Ä–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –∞—É–¥–∏—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä—è—é—Ç, —á—Ç–æ –ø–æ–ª–∏—Ç–∏–∫–∞ no-log –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∑–∞—è–≤–ª–µ–Ω–Ω—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º.

15. –ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
   - –ù–∞–ª–∏—á–∏–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ–π –∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏ 24/7 —á–µ—Ä–µ–∑ —á–∞—Ç—ã, email –∏–ª–∏ –¥—Ä—É–≥–∏–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å–≤—è–∑–∏, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –≤—Å–µ–≥–¥–∞ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.

--------------------

–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —á–∏—Ç–∞—Ç—å:
https://telegra.ph/Prodolzhenie-soobshcheniya-10-10
""",
            'prev': 'googledork',
            'next': 'services'
},
'services': {
            'text': """
–°–∞–π—Ç—ã / —Å–µ—Ä–≤–∏—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–∞–º –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è –≤ –±—É–¥–µ—â–µ–º:

https://telegra.ph/Servisy-FRONEST-10-20
""",
            'prev': 'vpntoproxy',
            'next': 'osint_services'
      }  
}


    
    topic_info = topics[call.data]
    keyboard = InlineKeyboardMarkup()
    keyboard.row(
        InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=topic_info['prev']),
        InlineKeyboardButton(text="–í–ø–µ—Ä—ë–¥", callback_data=topic_info['next'])
    )

    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=topic_info['text'], reply_markup=keyboard)
# –ö–æ–Ω–µ—Ü —Ñ—É–Ω–∫—Ü–∏–∏ OSINT —Å–µ—Ä–≤–∏—Å–æ–≤ /osint









# –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è /start
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π –∑–∞–ø—Ä–æ—Å–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
def request_phone_keyboard():
    keyboard = ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_phone = KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
    keyboard.add(button_phone)
    return keyboard

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
def create_subscription_keyboard():
    keyboard = InlineKeyboardMarkup()
    url_button = InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=f"https://t.me/{CHANNEL_ID[1:]}")
    check_button = InlineKeyboardButton(text="–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="check_subscription")
    keyboard.add(url_button)
    keyboard.add(check_button)
    return keyboard

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫–∞–Ω–∞–ª
def check_subscription(user_id):
    try:
        member = bot.get_chat_member(CHANNEL_ID, user_id)
        return member.status in ['member', 'administrator', 'creator']
    except telebot.apihelper.ApiException:
        return False

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ CSV —Ñ–∞–π–ª–µ
def is_user_in_csv(user_id):
    url = f"https://api.github.com/repos/{REPO}/contents/users.csv"
    headers = {"Authorization": f"token {GITHUB_TOKEN}"}
    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        content = base64.b64decode(response.json()['content']).decode('utf-8')
        return str(user_id) in content
    return False

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_id = message.from_user.id
    
    if is_user_in_csv(user_id):
        welcome_text = (
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FRONEST (Free Resources of OSINT & Network Security Tools)!\n\n"
            "‚¨áÔ∏è –ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤–≤–æ–¥–∞:\n\n"
            "üîç –ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö [–ò–Ω—Ç–µ—Ä–Ω–µ—Ç, –¥–∞—Ä–∫–Ω–µ—Ç]\n"
            "‚îî  /search\n\n"
            "üó∫üåç –°–±–æ—Ä –∏ –∞–Ω–∞–ª–∏–∑ –≥–µ–æ–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö\n"
            "‚îî  /geoint\n\n"
            "üé≠ –ú–∞—Å–∫–∏—Ä–æ–≤–∫–∞ —Å—Å—ã–ª–æ–∫\n"
            "‚îî  /mask\n\n"
            "üó∫ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ IP-–∞–¥—Ä–µ—Å—É\n"
            "‚îî  /checkip\n\n"
            "ü§ñ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Gemini AI –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞\n"
            "‚îî /gemini\n\n"
            "üåê –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å —Å–∞–π—Ç–∞–º–∏\n"
            "‚îú üåç –û—Ç–∫—Ä—ã—Ç–∏–µ —Å–∞–π—Ç–∞ –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: /opensite\n"
            "‚îú üåé –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Å —Å–∞–π—Ç–∞: /parse\n"
            "‚îî üåè –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–∞–π—Ç–∞ [.zip —Ñ–∞–π–ª]: –§—É–Ω–∫—Ü–∏—è –≤ BETA-—Ç–µ—Å—Ç–µ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞\n\n"
            "üÖ∞üÖøüÖ∫ –ü–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è hacking\n"
            "‚îî/apks\n\n"
            "üïµÔ∏è‚Äç‚ôÇÔ∏èüì° –î–æ—Ä–∫–∏–Ω–≥ –ø–æ–∏—Å–∫ –ø–æ —Ñ–∞–π–ª–∞–º –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ\n"
            "‚îî/dorks\n\n"
            "üëÅ –ü—Ä–æ–±–∏–≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ª—é–¥—è–º\n"
            "‚îî/q\n\n"
            "üí¨ –î–æ—Å—Ç—É–ø –∫ OSINT —Å–µ—Ä–≤–∏—Å–∞–º –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º\n"
            "‚îî –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
        )
        bot.send_message(message.chat.id, welcome_text)
    else:
        if check_subscription(user_id):
            bot.send_message(
                message.chat.id,
                "–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞–Ω—É—Ç—Å—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏ –∏ –Ω–µ –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º:",
                reply_markup=request_phone_keyboard()
            )
        else:
            bot.reply_to(
                message,
                "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.",
                reply_markup=create_subscription_keyboard()
            )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"
@bot.callback_query_handler(func=lambda call: call.data == "check_subscription")
def callback_check_subscription(call):
    user_id = call.from_user.id
    if check_subscription(user_id):
        bot.answer_callback_query(call.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")
        bot.send_message(
            call.message.chat.id,
            "–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞–Ω—É—Ç—Å—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏ –∏ –Ω–µ –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º:",
            reply_markup=request_phone_keyboard()
        )
    else:
        bot.answer_callback_query(call.id, "–í—ã –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞ (–Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞)
@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    if message.contact is not None:
        phone_number = message.contact.phone_number
        user_id = message.from_user.id
        username = f"@{message.from_user.username}" if message.from_user.username else "–ù–µ—Ç username"
        first_name = message.from_user.first_name or "–ù–µ—Ç –∏–º–µ–Ω–∏"
        last_name = message.from_user.last_name or "–ù–µ—Ç —Ñ–∞–º–∏–ª–∏–∏"
        chat_type = message.chat.type
        language_code = message.from_user.language_code or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_data = (
            f"{phone_number} | {user_id} | {username} | {first_name} | {last_name} | "
            f"{chat_type} | {language_code} | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n"
        )

        update_github_file('users.csv', user_data, message)

        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        welcome_text = (
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FRONEST (Free Resources of OSINT & Network Security Tools)!\n\n"
            "‚¨áÔ∏è –ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤–≤–æ–¥–∞:\n\n"
            "üîç –ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö [–ò–Ω—Ç–µ—Ä–Ω–µ—Ç, –¥–∞—Ä–∫–Ω–µ—Ç]\n"
            "‚îî  /search\n\n"
            "üó∫üåç –°–±–æ—Ä –∏ –∞–Ω–∞–ª–∏–∑ –≥–µ–æ–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö\n"
            "‚îî  /geoint\n\n"
            "üé≠ –ú–∞—Å–∫–∏—Ä–æ–≤–∫–∞ —Å—Å—ã–ª–æ–∫\n"
            "‚îî  /mask\n\n"
            "üó∫ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ IP-–∞–¥—Ä–µ—Å—É\n"
            "‚îî  /checkip\n\n"
            "ü§ñ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Gemini AI –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞\n"
            "‚îî /gemini\n\n"
            "üåê –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å —Å–∞–π—Ç–∞–º–∏\n"
            "‚îú üåç –û—Ç–∫—Ä—ã—Ç–∏–µ —Å–∞–π—Ç–∞ –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: /opensite\n"
            "‚îú üåé –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Å —Å–∞–π—Ç–∞: /parse\n"
            "‚îî üåè –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–∞–π—Ç–∞ [.zip —Ñ–∞–π–ª]: –§—É–Ω–∫—Ü–∏—è –≤ BETA-—Ç–µ—Å—Ç–µ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞\n\n"
            "üÖ∞üÖøüÖ∫ –ü–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è hacking\n"
            "‚îî/apks\n\n"
            "üïµÔ∏è‚Äç‚ôÇÔ∏èüì° –î–æ—Ä–∫–∏–Ω–≥ –ø–æ–∏—Å–∫ –ø–æ —Ñ–∞–π–ª–∞–º –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ\n"
            "‚îî/dorks\n\n"
            "üëÅ –ü—Ä–æ–±–∏–≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ª—é–¥—è–º\n"
            "‚îî/q\n\n"
            "üí¨ –î–æ—Å—Ç—É–ø –∫ OSINT —Å–µ—Ä–≤–∏—Å–∞–º –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º\n"
            "‚îî –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
        )
        bot.send_message(message.chat.id, welcome_text)

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–∞ GitHub
def update_github_file(filename, new_data, message):
    url = f"https://api.github.com/repos/{REPO}/contents/{filename}"
    headers = {
        "Authorization": f"token {GITHUB_TOKEN}",
        "Content-Type": "application/json"
    }

    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        file_data = response.json()
        sha = file_data['sha']
        content = base64.b64decode(file_data['content']).decode('utf-8')
        updated_content = content + new_data
    else:
        sha = None
        header = "Phone Number | User ID | Username | First Name | Last Name | Chat Type | Language Code | Registration Date\n"
        updated_content = header + new_data

    encoded_content = base64.b64encode(updated_content.encode('utf-8')).decode('utf-8')
    data = {
        "message": "–û–±–Ω–æ–≤–ª–µ–Ω —Ñ–∞–π–ª users.csv",
        "content": encoded_content,
        "sha": sha
    }

    response = requests.put(url, headers=headers, data=json.dumps(data))

    if response.status_code in [200, 201]:
        bot.send_message(message.chat.id, "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
    else:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {response.json().get('message')}")
# –ö–æ–Ω–µ—Ü –∫–æ–º–∞–Ω–¥—ã /start








    
# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ (–ª–∏–±–æ 'extract', –ª–∏–±–æ 'screenshot')
current_process = None

user_texts = {}
user_titles = {}
user_urls = {}

# –ö–æ–º–∞–Ω–¥–∞ /opensite
@bot.message_handler(commands=['opensite'])
def handle_opensite(message):
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
    show_open_site_options(message)

def show_open_site_options(message):
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏: "–ò–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç" –∏ "–°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç"
    keyboard = InlineKeyboardMarkup()
    extract_text_button = InlineKeyboardButton('–ò–ó–í–õ–ï–ß–¨ –¢–ï–ö–°–¢', callback_data='extract_text')
    screenshot_button = InlineKeyboardButton('–°–î–ï–õ–ê–¢–¨ –°–ö–†–ò–ù–®–û–¢', callback_data='make_screenshot')
    keyboard.row(extract_text_button)
    keyboard.row(screenshot_button)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ò–ó–í–õ–ï–ß–¨ –¢–ï–ö–°–¢"
@bot.callback_query_handler(func=lambda call: call.data == 'extract_text')
def request_url_for_text_extraction(call):
    global current_process
    bot.answer_callback_query(call.id)
    
    # –ï—Å–ª–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –¥—Ä—É–≥–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, –∑–∞–≤–µ—Ä—à–∞–µ–º –µ–≥–æ
    if current_process == 'screenshot':
        bot.send_message(call.message.chat.id, "–ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –∑–∞–Ω–æ–≤–æ.")
    
    current_process = 'extract'
    bot.send_message(call.message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç.")

    @bot.message_handler(func=lambda message: current_process == 'extract')
    def extract_text_from_url(message):
        global current_process
        if current_process != 'extract':
            return

        url = message.text
        try:
            response = requests.get(url)
            response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
            soup = BeautifulSoup(response.text, 'html.parser')
            
            title = soup.title.string if soup.title else '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞'
            text = soup.get_text()
            chunks = [text[i:i+4096] for i in range(0, len(text), 4096)]  # –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —á–∞—Å—Ç–∏ –ø–æ 4096 —Å–∏–º–≤–æ–ª–æ–≤

            user_texts[message.chat.id] = chunks
            user_titles[message.chat.id] = title
            user_urls[message.chat.id] = url

            bot.send_message(message.chat.id, f"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}\n–¢–µ–∫—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã:")
            bot.send_message(message.chat.id, chunks[0], reply_markup=create_markup(0, len(chunks), title, url))
        
        except requests.exceptions.RequestException as e:
            bot.send_message(message.chat.id, f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–∞–π—Ç—É: {str(e)}")
        
        # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
        current_process = None

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°–î–ï–õ–ê–¢–¨ –°–ö–†–ò–ù–®–û–¢"
@bot.callback_query_handler(func=lambda call: call.data == 'make_screenshot')
def request_url_for_screenshot(call):
    global current_process
    bot.answer_callback_query(call.id)

    # –ï—Å–ª–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –¥—Ä—É–≥–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, –∑–∞–≤–µ—Ä—à–∞–µ–º –µ–≥–æ
    if current_process == 'extract':
        bot.send_message(call.message.chat.id, "–ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –∑–∞–Ω–æ–≤–æ.")
    
    current_process = 'screenshot'
    bot.send_message(call.message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç.")

    @bot.message_handler(func=lambda message: current_process == 'screenshot')
    def process_screenshot(message):
        global current_process
        if current_process != 'screenshot':
            return

        url = message.text.strip()
        if not url.startswith(('http://', 'https://')):
            bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å http:// –∏–ª–∏ https://")
            return

        bot.reply_to(message, "–°–æ–∑–¥–∞—é —Å–∫—Ä–∏–Ω—à–æ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        screenshot_path = take_screenshot(url)
        
        if screenshot_path:
            with open(screenshot_path, 'rb') as file:
                bot.send_photo(message.chat.id, file, caption=f"–°–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–π—Ç–∞ {url}")
            os.remove(screenshot_path)
        else:
            bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        
        # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
        current_process = None

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
def take_screenshot(url):
    chrome_options = Options()
    chrome_options.add_argument("--headless")
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    chrome_options.add_argument("user-agent=Mozilla/5.0 (Windows NT 11.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36")
    
    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=chrome_options)
    
    try:
        driver.get(url)
        logger.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {url}")
        time.sleep(random.uniform(2, 5))  # –ò–º–∏—Ç–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        
        screenshot_path = 'page_screenshot.png'
        driver.save_screenshot(screenshot_path)
        logger.info("–°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
        return screenshot_path

    except Exception as e:
        logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        return None

    finally:
        driver.quit()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞–∑–º–µ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ç–µ–∫—Å—Ç—É
def create_markup(current_page, total_pages, title, url):
    markup = InlineKeyboardMarkup()
    if current_page > 0:
        prev_button = InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data=f"prev:{current_page}")
        markup.add(prev_button)
    if current_page < total_pages - 1:
        next_button = InlineKeyboardButton("–í–ø–µ—Ä–µ–¥", callback_data=f"next:{current_page}")
        markup.add(next_button)
    return markup

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º —Ç–µ–∫—Å—Ç–∞
@bot.callback_query_handler(func=lambda call: call.data.startswith('prev') or call.data.startswith('next'))
def callback_query(call):
    try:
        chat_id = call.message.chat.id
        if chat_id not in user_texts:
            bot.answer_callback_query(call.id, "–¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É —Å–Ω–æ–≤–∞.")
            return

        action, current_page = call.data.split(':')
        current_page = int(current_page)

        chunks = user_texts[chat_id]

        if action == "prev" and current_page > 0:
            current_page -= 1
        elif action == "next" and current_page < len(chunks) - 1:
            current_page += 1
        else:
            bot.answer_callback_query(call.id, "–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –∫—Ä–∞—è —Ç–µ–∫—Å—Ç–∞.")
            return

        new_text = chunks[current_page] if chunks[current_page].strip() else "–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—É—Å—Ç–∞."

        bot.edit_message_text(
            chat_id=chat_id,
            message_id=call.message.message_id,
            text=new_text,
            reply_markup=create_markup(current_page, len(chunks), user_titles[chat_id], user_urls[chat_id])
        )
        bot.answer_callback_query(call.id)
    except Exception as e:
        error_message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback query: {str(e)}"
        bot.send_message(chat_id, error_message)
        bot.answer_callback_query(call.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.")
# –ö–æ–Ω–µ—Ü –∫–æ–º–∞–Ω–¥—ã /opensite




 



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å "pn"
@bot.message_handler(func=lambda message: message.text.lower().startswith("pn"))
def handle_phone_lookup_text(message):
    phone_number = message.text[2:].strip()  # –£–¥–∞–ª—è–µ–º "pn" –∏ –ª—é–±—ã–µ –ø—Ä–æ–±–µ–ª—ã

    # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "+", –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
    if not phone_number.startswith("+"):
        phone_number = "+" + phone_number

    response, original_number = phone_lookup(phone_number)

    if original_number:
        # –°–æ–∑–¥–∞–Ω–∏–µ Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
        markup = InlineKeyboardMarkup()
        encoded_number = urllib.parse.quote(original_number)
        telegram_url = f"https://t.me/{encoded_number}"
        viber_url = f"https://botapi.co/viber/{encoded_number}?&gclid=25662590:6b357895f6c29c75a7554a70834bdaf0&_bk=cloudflare"
        whatsapp_url = f"https://api.whatsapp.com/send/?phone={encoded_number.replace('+', '')}&text&type=phone_number&app_absent=0"

        markup.add(InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram", url=telegram_url))
        markup.add(InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –≤ Viber", url=viber_url))
        markup.add(InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –≤ WhatsApp", url=whatsapp_url))

        bot.send_message(message.chat.id, response, reply_markup=markup)
    else:
        bot.reply_to(message, response)
# –ö–æ–Ω–µ—Ü –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ "pn"


# –ö–æ–º–∞–Ω–¥–∞ /createsite
@bot.message_handler(commands=['createsite'])
def handle_createsite(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ —Å–∞–π—Ç–∞:")
    bot.register_next_step_handler(msg, process_repo_creation)

def process_repo_creation(message):
    repo_name = message.text
    repo = create_github_repo(repo_name)
    bot.reply_to(message, f"–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π {repo_name} —Å–æ–∑–¥–∞–Ω. –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ZIP-—Ñ–∞–π–ª —Å —Ñ–∞–π–ª–∞–º–∏ –¥–ª—è —Å–∞–π—Ç–∞.")
    bot.register_next_step_handler(message, process_site_files, repo)

def process_site_files(message, repo):
    if message.document and message.document.mime_type == 'application/zip':
        file_info = bot.get_file(message.document.file_id)
        downloaded_file = bot.download_file(file_info.file_path)

        with open('site_files.zip', 'wb') as new_file:
            new_file.write(downloaded_file)

        upload_files_to_repo(repo, 'site_files.zip')
        bot.reply_to(message, "–§–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π.")

        success, site_url = enable_github_pages(repo)
        if success:
            bot.send_message(message.chat.id, f"GitHub Pages –≤–∫–ª—é—á–µ–Ω—ã. –í–∞—à —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: {site_url}")
        else:
            bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –≤–∫–ª—é—á–∏—Ç—å GitHub Pages. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –≤—Ä—É—á–Ω—É—é.")
    else:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞ –≤—å—Ç–µ ZIP-—Ñ–∞–π–ª.")
        bot.register_next_step_handler(message, process_site_files, repo)
# –ö–æ–Ω–µ—Ü –∫–æ–º–∞–Ω–¥—ã /createsite



# –ö–æ–º–∞–Ω–¥–∞ /search
@bot.message_handler(commands=['search'])
def handle_search(message):
    show_search_engines(message)
    
def show_search_engines(message):
    keyboard = InlineKeyboardMarkup()
    aol_button = InlineKeyboardButton('AOL –ü–û–ò–°–ö', callback_data='aol_search')
    google_button = InlineKeyboardButton('GOOGLE –ü–û–ò–°–ö', callback_data='google_search')
    bing_button = InlineKeyboardButton('BING –ü–û–ò–°–ö', callback_data='bing_search')
    ahmia_button = InlineKeyboardButton('AHMIA –ü–û–ò–°–ö', callback_data='ahmia_search')
    keyboard.add(aol_button, google_button, bing_button, ahmia_button)

    message_text = """üåê –ü–û–ü–£–õ–Ø–†–ù–´–ï –ü–û–ò–°–ö–û–í–ò–ö–ò
‚îú‚îÄ‚îÄ AOL –ü–û–ò–°–ö
‚îÇ   ‚îî‚îÄ‚îÄ —ç—Ç–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ BING
‚îÇ    
‚îú‚îÄ‚îÄ GOOGLE –ü–û–ò–°–ö
‚îÇ   ‚îî‚îÄ‚îÄ –æ–±—ã—á–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
‚îÇ  
‚îú‚îÄ‚îÄ BING –ü–û–ò–°–ö
‚îÇ   ‚îî‚îÄ‚îÄ –º–æ–∂–µ—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è –µ—Å–ª–∏ AOL –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
‚îÇ
‚îî‚îÄ‚îÄ AHMIA –ü–û–ò–°–ö
    ‚îî‚îÄ‚îÄ –ø–æ–∏—Å–∫ –ø–æ —Å–∫—Ä—ã—Ç–æ–º—É —Å–µ–≥–º–µ–Ω—Ç—É –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞"""

    bot.send_message(message.chat.id, message_text, reply_markup=keyboard)
    
@bot.callback_query_handler(func=lambda call: call.data in ['aol_search', 'google_search', 'bing_search', 'ahmia_search'])
def ask_for_search_query(call):
    search_type = call.data.split('_')[0].capitalize()
    bot.answer_callback_query(call.id)
    msg = bot.send_message(call.message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ {search_type}:")
    bot.register_next_step_handler(msg, process_search, search_type.lower())

def process_search(message, search_type):
    query = message.text
    if search_type == 'aol':
        response_text, keyboard = perform_aol_search(query)
    elif search_type == 'google':
        response_text, keyboard = perform_google_search(query)
    elif search_type == 'bing':
        response_text, keyboard = perform_bing_search(query)
    elif search_type == 'ahmia':
        response_text, keyboard = perform_ahmia_search(query)
    else:
        response_text = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –ø–æ–∏—Å–∫–∞."
        keyboard = None

    bot.send_message(message.chat.id, response_text, reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: call.data.startswith(('aol_search_page', 'google_search_page', 'bing_search_page', 'ahmia_search_page')))
def handle_pagination(call):
    search_type, query, page = call.data.split(";")
    page = int(page)
    search_type = search_type.split('_')[0]
    
    if search_type == 'aol':
        response_text, keyboard = perform_aol_search(query, page)
    elif search_type == 'google':
        response_text, keyboard = perform_google_search(query, page)
    elif search_type == 'bing':
        response_text, keyboard = perform_bing_search(query, page)
    elif search_type == 'ahmia':
        response_text, keyboard = perform_ahmia_search(query, page)
    else:
        response_text = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –ø–æ–∏—Å–∫–∞."
        keyboard = None

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text=response_text,
        reply_markup=keyboard
    )

    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å—ã –∑–∞–≥—Ä—É–∑–∫–∏" –Ω–∞ –∫–Ω–æ–ø–∫–µ
    bot.answer_callback_query(call.id)
# –ö–æ–Ω–µ—Ü –∫–æ–º–∞–Ω–¥—ã /search


# –ö–æ–º–∞–Ω–¥–∞ /mask
@bot.message_handler(commands=['mask'])
def handle_mask(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –º–∞—Å–∫–∏—Ä–æ–≤–∫–∏:")
    bot.register_next_step_handler(msg, process_link_masking)
    
def process_link_masking(message):
    link = message.text
    masked_links = masklink(link)
    bot.reply_to(message, masked_links)
# –ö–æ–Ω–µ—Ü –∫–æ–º–∞–Ω–¥—ã /mask


# –ö–æ–º–∞–Ω–¥–∞ /—Åheckip
@bot.message_handler(commands=['checkip'])
def handle_checkip(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ IP-–∞–¥—Ä–µ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    bot.register_next_step_handler(msg, process_ip_check)

def process_ip_check(message):
    ip_address = message.text.strip()
    bot.reply_to(message, f"–ò—â—É –¥–∞–Ω–Ω—ã–µ –¥–ª—è IP: {ip_address}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.")
    
    parsed_text, screenshot_path = parse_geolocation_data(ip_address)
    
    if parsed_text and screenshot_path:
        formatted_text = format_data(parsed_text)
        with open(screenshot_path, 'rb') as file:
            bot.send_photo(message.chat.id, file, caption=f"–î–∞–Ω–Ω—ã–µ –¥–ª—è IP {ip_address}:\n{formatted_text}")
        os.remove(screenshot_path)
    else:
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
# –ö–æ–Ω–µ—Ü –∫–æ–º–∞–Ω–¥—ã /checkip



# –ö–æ–º–∞–Ω–¥–∞ /parse
@bot.message_handler(commands=['parse'])
def handle_parse(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ —Å–∞–π—Ç–∞ [BETA]:")
    bot.register_next_step_handler(msg, process_parse_site)

def process_parse_site(message):
    url = message.text.strip()
    if not url.startswith(('http://', 'https://')):
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å http:// –∏–ª–∏ https://")
        return

    bot.reply_to(message, "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...")

    zip_buffer, zip_filename = parse_site(url)

    if zip_buffer:
        bot.send_document(message.chat.id, zip_buffer, visible_file_name=zip_filename)
        bot.send_message(message.chat.id, "–í–æ—Ç –≤–∞—à ZIP-—Ñ–∞–π–ª, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –≤—Å–µ —Ñ–∞–π–ª—ã –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏!")
    else:
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª—ã –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.")
# –ö–æ–Ω–µ—Ü –∫–æ–º–∞–Ω–¥—ã /parse


# –ö–æ–º–∞–Ω–¥–∞ /gemini
@bot.message_handler(commands=['gemini'])
def handle_gemini(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è Gemini:")
    bot.register_next_step_handler(msg, process_gemini_query)

def process_gemini_query(message):
    query = message.text
    bot.send_message(message.chat.id, "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...")
    response = perform_gemini_with_aol_search(query)
    bot.reply_to(message, response)
# –ö–æ–Ω–µ—Ü –∫–æ–º–∞–Ω–¥—ã /gemini




# –ö–æ–º–∞–Ω–¥–∞ /geoint
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –∫–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–º –Ω–æ–º–µ—Ä–æ–º
def is_cadastral_number(text):
    return ':' in text and any(char.isdigit() for char in text) and not text.startswith(('http://', 'https://'))

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è—é—Ç—Å—è –ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
def is_coordinates(text):
    parts = text.split(',')
    if len(parts) != 2:
        return False
    try:
        lat, lon = float(parts[0]), float(parts[1])
        return -90 <= lat <= 90 and -180 <= lon <= 180
    except ValueError:
        return False

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /geoint
@bot.message_handler(commands=['geoint'])
def request_input(message):
    markup = InlineKeyboardMarkup()
    button_coordinates = InlineKeyboardButton("–ü–û –ö–û–û–†–î–ò–ù–ê–¢–ê–ú", callback_data="request_coordinates")
    button_cadastral = InlineKeyboardButton("–ö–ê–î–ê–°–¢–†–û–í–´–ô –ù–û–ú–ï–† üá∫üá¶", callback_data="request_cadastral")
    markup.add(button_coordinates)
    markup.add(button_cadastral)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤–≤–æ–¥–∞:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–û –ö–û–û–†–î–ò–ù–ê–¢–ê–ú"
@bot.callback_query_handler(func=lambda call: call.data == "request_coordinates")
def callback_coordinates(call):
    bot.answer_callback_query(call.id)
    bot.send_message(call.message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 50.503716,30.809038")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ö–ê–î–ê–°–¢–†–û–í–´–ô –ù–û–ú–ï–†"
@bot.callback_query_handler(func=lambda call: call.data == "request_cadastral")
def callback_cadastral(call):
    bot.answer_callback_query(call.id)
    bot.send_message(call.message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
@bot.message_handler(func=lambda message: is_coordinates(message.text))
def handle_coordinates(message):
    coordinates = message.text.strip()
    lat, lon = map(float, coordinates.split(','))
    
    google_maps_url = f"https://www.google.com/maps?ll={lat},{lon}&q={lat},{lon}&hl=en&t=m&z=15"
    bing_maps_url = f"https://www.bing.com/maps/?v=2&cp={lat}~{lon}&style=r&lvl=15&sp=Point.{lat}_{lon}____"
    apple_maps_url = f"https://maps.apple.com/maps?ll={lat},{lon}&q={lat},{lon}&t=m"
    yandex_maps_url = f"https://maps.yandex.com/?ll={lon},{lat}&spn=0.01,0.01&l=sat,skl&pt={lon},{lat}"
    
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("Google Maps", url=google_maps_url))
    markup.add(InlineKeyboardButton("Bing Maps", url=bing_maps_url))
    markup.add(InlineKeyboardButton("Apple Maps", url=apple_maps_url))
    markup.add(InlineKeyboardButton("Yandex Maps", url=yandex_maps_url))
    
    bot.reply_to(message, f"–ü–æ –¥–∞–Ω–Ω—ã–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º –Ω–∞–π–¥–µ–Ω—ã —Ç–∞–∫–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:", reply_markup=markup)


# Send image and additional buttons
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã
    image_url = "https://i.postimg.cc/t4LXnfqX/1000474879.png"
    caption = "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:"
    markup = InlineKeyboardMarkup()
    markup.row(
        InlineKeyboardButton("Arcgis", url=f"https://livingatlas.arcgis.com/wayback/#localChangesOnly=true&ext={lon},{lat},{lon},{lat}"),
        InlineKeyboardButton("EarthEngine", url=f"https://earthengine.google.com/timelapse/#v={lat},{lon},15,latLng&t=3.04"),
        InlineKeyboardButton("Sentinel", url=f"https://apps.sentinel-hub.com/sentinel-playground/?source=S2L2A&lat={lat}&lng={lon}")
    )
    bot.send_photo(message.chat.id, image_url, caption=caption, reply_markup=markup)

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–æ–∫ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
    toolforge_url = f"https://osm-gadget-leaflet.toolforge.org/#/?lat={lat}&lon={lon}&zoom=15&lang=commons"
    yandex_url = f"https://yandex.com/maps/?l=sat%2Cpht&ll={lon}%2C{lat}&pt={lon},{lat}&z=15"
    flickr_url = f"https://www.flickr.com/map?&fLat={lat}&fLon={lon}&zl=17"
    
    # –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ –∏ —Ç—Ä–µ–º—è –∫–Ω–æ–ø–∫–∞–º–∏
    markup = InlineKeyboardMarkup()
    markup.row(
        InlineKeyboardButton("Toolforge", url=toolforge_url),
        InlineKeyboardButton("Yandex", url=yandex_url),
        InlineKeyboardButton("Flickr", url=flickr_url)
    )
    
    bot.send_photo(message.chat.id, 'https://i.postimg.cc/dQhTtC42/1000474891.png', caption="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –≤–≤–µ–¥–µ–Ω–Ω—ã–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º:", reply_markup=markup)
    
    # –î–∞–ª–µ–µ –¥–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ –∏ –∫–Ω–æ–ø–∫–∏
    send_photos_with_buttons(message.chat.id, lat, lon)

def send_photos_with_buttons(chat_id, lat, lon):
    # –í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    pastvu_url = f"https://pastvu.com/?g={lat},{lon}&z=16&s=osm&t=mapnik&type=1"
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton("Pastvu", url=pastvu_url))
    bot.send_photo(chat_id, 'https://i.postimg.cc/63Mp9ByB/1000474905.png', reply_markup=markup)
    
    # –¢—Ä–µ—Ç—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    zoom_earth_url = f"https://zoom.earth/#view={lat},{lon},8z/date=,+0/layers=wind,fires"
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton("Zoom Earth", url=zoom_earth_url))
    bot.send_photo(chat_id, 'https://i.postimg.cc/GpqCDqrQ/1000474913.png', reply_markup=markup)
    
    # –ß–µ—Ç–≤–µ—Ä—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    peakfinder_url = f"https://www.peakfinder.org/?lat={lat}&lng={lon}&name=The%20Antipodes%20of%20"
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton("PeakFinder", url=peakfinder_url))
    bot.send_photo(chat_id, 'https://i.postimg.cc/TPwRCZtS/1000474918.png', reply_markup=markup)

    # –ü—è—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    wikimapia_url = f"http://wikimapia.org/m/#lang=en&lat={lat}&lon={lon}&z=15&m=b"
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton("Wikimapia", url=wikimapia_url))
    bot.send_photo(chat_id, 'https://i.postimg.cc/QMH3pctZ/1000474926.png', reply_markup=markup)

    # –®–µ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    copernix_url = f"https://copernix.io/#?where={lon},{lat},15&query=&pagename=?language=en"
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton("Copernix", url=copernix_url))
    bot.send_photo(chat_id, 'https://i.postimg.cc/rygfL3jg/1000474936.png', reply_markup=markup)

    # –°–µ–¥—å–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    strava_url = f"https://labs.strava.com/heatmap/#15.11/{lon}/{lat}/hot/all"
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton("Strava", url=strava_url))
    bot.send_photo(chat_id, 'https://i.postimg.cc/Hs0m9p93/1000474945.png', reply_markup=markup)

    # –í–æ—Å—å–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏
    openstreet_url = f"https://openstreetbrowser.org/#map=15/{lat}/{lon}"
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton("OpenStreetBrowser", url=openstreet_url))
    bot.send_photo(chat_id, 'https://i.postimg.cc/mk2YpZFM/1000474954.png', reply_markup=markup)

    # –î–µ–≤—è—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç—Ä–µ–º—è –∫–Ω–æ–ø–∫–∞–º–∏
    cities_url = f"https://www.360cities.net/map?lat={lat}&lng={lon}&zoom=15"
    kartaview_url = f"https://kartaview.org/map/@{lat},{lon},17z"
    mapillary_url = f"https://www.mapillary.com/app/?menu=false&lat={lat}&lng={lon}&z=17&mapStyle=Mapillary+satellite"
    markup = InlineKeyboardMarkup()
    markup.row(
        InlineKeyboardButton("360 Cities", url=cities_url),
        InlineKeyboardButton("KartaView", url=kartaview_url),
        InlineKeyboardButton("Mapillary", url=mapillary_url)
    )
    bot.send_photo(chat_id, 'https://i.postimg.cc/RFqCgjZh/1000474962.png', reply_markup=markup)

    # –î–µ—Å—è—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    kadastr_url = f"https://kadastr.live/#16.30/{lat}/{lon}"
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton("Kadastr", url=kadastr_url))
    bot.send_photo(chat_id, 'https://i.postimg.cc/Wz8kqWTb/1000475071.png', reply_markup=markup)

    # 11 –°–æ–æ–±—â–µ–Ω–∏–µ
    rosreestr_url = f"https://—Ä–æ—Å—Ä–µ–µ—Å—Ç—Ä–∞-–≤—ã–ø–∏—Å–∫–∞.—Ä—É—Å/–∫–∞–¥–∞—Å—Ç—Ä–æ–≤–∞—è_–∫–∞—Ä—Ç–∞#ct={lat}&cg={lon}&zoom=18"
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton("–†–æ—Å—Ä–µ–µ—Å—Ç—Ä", url=rosreestr_url))
    bot.send_photo(chat_id, 'https://i.postimg.cc/L63PBmjz/1000475079.png', reply_markup=markup)

    # 11 –°–æ–æ–±—â–µ–Ω–∏–µ
    deepstate_url = f"https://deepstatemap.live/#18/{lat}/{lon}"
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton("DeepState", url=deepstate_url))
    bot.send_photo(chat_id, 'https://i.postimg.cc/1zhr6J7x/1000476132.png', reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∫–∞–¥–∞—Å—Ç—Ä–æ–≤–æ–≥–æ –Ω–æ–º–µ—Ä–∞
@bot.message_handler(func=lambda message: is_cadastral_number(message.text))
def handle_cadastral_number(message):
    cadastral_number = message.text.strip()
    url = f'https://opendatabot.ua/l/{cadastral_number}?from=search'
    bot.send_message(message.chat.id, f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–∞–¥–∞—Å—Ç—Ä–æ–≤–æ–º—É –Ω–æ–º–µ—Ä—É: {cadastral_number}")
    
    screenshot_path, description = parse_opendatabot_page(url)
    
    if screenshot_path:
        with open(screenshot_path, 'rb') as file:
            bot.send_photo(message.chat.id, file, caption=description)
        os.remove(screenshot_path)
    else:
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∫–∞–¥–∞—Å—Ç—Ä–æ–≤–æ–º—É –Ω–æ–º–µ—Ä—É.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã
def shutdown():
    close_driver()
# –ö–æ–Ω–µ—Ü –∫–æ–º–∞–Ω–¥—ã /geoint 


# –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–æ–º–∞–Ω–¥—ã /apks
@bot.message_handler(commands=['apks'])
def handle_apks(message):
    apks_info = """
–ü—Ä–∏–≤–µ—Ç! –¢—ã –ø–æ–ø–∞–ª –≤ –º–∏—Ä APK-—Ñ–∞–π–ª–æ–≤.

–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –¥–µ–∫–æ–º–ø–∏–ª—è—Ü–∏–∏, –∞–Ω–∞–ª–∏–∑–∞, –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ Android. –í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –æ–ø—Ü–∏—é:
"""
    keyboard = InlineKeyboardMarkup()
    buttons = [
        InlineKeyboardButton(text="Apk Mods Store", callback_data="decompile_apk"),
        InlineKeyboardButton(text="Fake GPS Location", callback_data="analyze_permissions"),
        InlineKeyboardButton(text="Password Manager", callback_data="static_analysis"),
        InlineKeyboardButton(text="WI-FI", callback_data="dynamic_analysis"),
        InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å—å APK", callback_data="sign_apk"),
        InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∏—Ä—É—Å—ã", callback_data="virus_check"),
        InlineKeyboardButton(text="APKTool", callback_data="apktool"),
        InlineKeyboardButton(text="JADX GUI", callback_data="jadx_gui"),
        InlineKeyboardButton(text="–ê–Ω–∞–ª–∏–∑ DEX", callback_data="dex_analysis"),
        InlineKeyboardButton(text="–ü—Ä–æ—á–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", callback_data="other_tools")
    ]
    keyboard.add(*buttons[:2])
    keyboard.add(*buttons[2:4])
    keyboard.add(*buttons[4:6])
    keyboard.add(*buttons[6:8])
    keyboard.add(*buttons[8:])

    bot.send_message(message.chat.id, apks_info, reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data in ['decompile_apk', 'analyze_permissions', 'static_analysis', 'dynamic_analysis', 'sign_apk', 'virus_check', 'apktool', 'jadx_gui', 'dex_analysis', 'other_tools', 'return_to_menu'])
def handle_apks_topics(call):
    bot.answer_callback_query(call.id)

    topics = {
        'decompile_apk': {
            'text': """
Lite APKS.com - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ/—Å–∞–π—Ç, —Å–∞–º—ã–π –ª—É—á—à–∏–π –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∫—Ä—è–∫–Ω—É—Ç—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.
https://upload.app/download/liteapks/com.liteapks.androidapps/67215d3af5ad10d84e1ba0e394ea3d5e7e93ead81bdfd05cd572247aed28d5b7
""",
            'prev': None,  # –ü–µ—Ä–≤–∞—è —Ç–µ–º–∞, –Ω–µ—Ç –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
            'next': 'analyze_permissions'
        },
        'analyze_permissions': {
            'text': """
Fake GPS Location - –ª–µ–≥–∫–æ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ GPS.
https://upload.app/download/fake-gps-location/com.hopefactory2021.fakegpslocation/b03356e6200024a86277d4dacbaef03aebaab138fc507a623bbdac05601552c6
""",
            'prev': 'decompile_apk',
            'next': 'static_analysis'
        },
        'static_analysis': {
            'text': """
KPASS - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–≤–æ–∏—Ö –ø–∞—Ä–æ–ª–µ–π –≤ –Ω–∞–¥—ë–∂–Ω–æ–º –º–µ—Å—Ç–µ, –≤—Å—ë —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ, –µ—Å—Ç—å —ç–∫—Å–ø–æ—Ä—Ç —Ñ–∞–π–ª–∞.
https://play.google.com/store/apps/details?id=com.korovan.kpass
""",
            'prev': 'analyze_permissions',
            'next': 'dynamic_analysis'
        },
        'dynamic_analysis': {
            'text': """
1. WiFiMan - —Å–∫–µ–Ω–µ—Ä —Å–µ—Ç–∏, –æ–±–Ω–æ—Ä—É–∂–µ–Ω–∏–µ —Å–µ—Ç–µ–≤—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤, –∏ –º–Ω–æ–≥–æ –¥—Ä—É–≥–∏—Ö –ø–ª—é—à–µ–∫
https://play.google.com/store/apps/details?id=com.ubnt.usurvey

2. Wigle WiFi - —Å–ø–∏—Å–æ–∫ —Å–µ—Ç–µ–π, –∫–∞—Ä—Ç–∞ —Å–µ—Ç–µ–π –ø–æ GPS, –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö, –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–µ–π
https://play.google.com/store/apps/details?id=net.wigle.wigleandroid

3.  WiFi Tools - —É–∑–Ω–∞—Ç—å –º–Ω–æ–≥–ª —á–µ–≥–æ –æ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ, –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–µ.
https://play.google.com/store/apps/details?id=com.ddm.iptoolslight

4. WpsApp - –≤–∑–ª–æ–º Wifi —Å–µ—Ç–µ–π
https://play.google.com/store/apps/details?id=com.themausoft.wpsapp

5. WiFi File Transfer - –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Ñ–∞–π–ª–∞–º–∏ —Å –ø–æ–º–æ—â—å—é WiFi, –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
https://upload.app/download/wifi-file-transfer-pro/com.smarterdroid.wififiletransferpro/1ac9ea8f9f8e95d2ca9ae9dc5fc534111fd7c7749275c9b4ee9ad4c2ec652f24

6. WiFi –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∫ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω–∞
https://upload.app/download/wifikeyboard/com.volosyukivan/38374bb6573c4dca9fd58788ba120542b0aac592c55f276d4b0bbbe957d4a3dc
""",
            'prev': 'static_analysis',
            'next': 'sign_apk'
        },
        'sign_apk': {
            'text': """
–ü–æ–¥–ø–∏—Å—å APK ‚Äî —ç—Ç–æ –≤–∞–∂–Ω—ã–π —à–∞–≥ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ó–¥–µ—Å—å —Ç—ã —É–∑–Ω–∞–µ—à—å, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å APK-—Ñ–∞–π–ª—ã.
""",
            'prev': 'dynamic_analysis',
            'next': 'virus_check'
        },
        'virus_check': {
            'text': """
–ü—Ä–æ–≤–µ—Ä–∫–∞ APK –Ω–∞ –≤–∏—Ä—É—Å—ã –∏ –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ–Ω–ª–∞–π–Ω-—Å–µ—Ä–≤–∏—Å–æ–≤ –∏ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º.
""",
            'prev': 'sign_apk',
            'next': 'apktool'
        },
        'apktool': {
            'text': """
APKTool ‚Äî –º–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –¥–µ–∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ APK. –ò—Å–ø–æ–ª—å–∑—É–π –µ–≥–æ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞.
""",
            'prev': 'virus_check',
            'next': 'jadx_gui'
        },
        'jadx_gui': {
            'text': """
JADX GUI ‚Äî –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –¥–µ–∫–æ–º–ø–∏–ª—è—Ü–∏–∏ APK –∏ –∏–∑—É—á–µ–Ω–∏—è Java-–∫–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.
""",
            'prev': 'apktool',
            'next': 'dex_analysis'
        },
        'dex_analysis': {
            'text': """
–ê–Ω–∞–ª–∏–∑ DEX-—Ñ–∞–π–ª–æ–≤ ‚Äî —ç—Ç–æ –∏–∑—É—á–µ–Ω–∏–µ –±–∞–π—Ç-–∫–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—Å–Ω–æ–≤–Ω—É—é –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã.
""",
            'prev': 'jadx_gui',
            'next': 'other_tools'
        },
        'other_tools': {
            'text': """
–ü—Ä–æ—á–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ APK, —Ç–∞–∫–∏–µ –∫–∞–∫ MobSF, JADX, Androguard –∏ –¥—Ä—É–≥–∏–µ, –ø–æ–º–æ–≥—É—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–æ.
""",
            'prev': 'dex_analysis',
            'next': None  # –ü–æ—Å–ª–µ–¥–Ω—è—è —Ç–µ–º–∞, –Ω–µ—Ç –∫–Ω–æ–ø–∫–∏ "–í–ø–µ—Ä–µ–¥"
        }
    }

    if call.data == 'return_to_menu':
        handle_apks(call.message)
        return

    topic_info = topics[call.data]
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    keyboard = InlineKeyboardMarkup()

    if topic_info['prev']:
        prev_button = InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data=topic_info['prev'])
        keyboard.add(prev_button)

    if topic_info['next']:
        next_button = InlineKeyboardButton("–í–ø–µ—Ä–µ–¥", callback_data=topic_info['next'])
        keyboard.add(next_button)
    else:
        # –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è —Ç–µ–º–∞, –∫–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥" –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è
        last_button = InlineKeyboardButton("–ö–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞", callback_data='end_of_list')
        keyboard.add(last_button)

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
    return_button = InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='return_to_menu')
    keyboard.add(return_button)

    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=topic_info['text'], reply_markup=keyboard)
# –ö–æ–Ω–µ—Ü –∫–æ–º–∞–Ω–¥—ã /apks

# –ö–æ–º–∞–Ω–¥–∞ /q
@bot.message_handler(commands=['q'])
def handle_q(message):
    bot.send_message(message.chat.id, """
‚¨áÔ∏è –ü—Ä–∏–º–µ—Ä—ã –°–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ë–æ—Ç–∞:

üì± –ü–æ–∏—Å–∫ –ø–æ –ù–æ–º–µ—Ä—É –¢–µ–ª–µ—Ñ–æ–Ω–∞
 ‚îî üí¨ pn380********* | pn7**********

‚úàÔ∏è –ü–æ–∏—Å–∫ –ø–æ Telegram
 ‚îú üí¨ id281485304
 ‚îî üí¨ @durov

üë® –ü–æ–∏—Å–∫ –ø–æ –ò–º–µ–Ω–∏
 ‚îú üí¨ –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á
 ‚îî üí¨ –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω 05.02.1994

üöó –ü–æ–∏—Å–∫ –ø–æ VIN, –ì–æ—Å.–ù–æ–º–µ—Ä—É –ê–≤—Ç–æ
 ‚îú üí¨ XTA212140J2311550 
 ‚îî üí¨ –ù777–û–ù777

üë§ –ü–æ–∏—Å–∫ –ø–æ –°—Å—ã–ª–∫–µ –≤ –°–æ—Ü.–°–µ—Ç–∏
 ‚îú üí¨ vk.com/id577744097
 ‚îú üí¨ instagram.com/ev.antipov
 ‚îú üí¨ ok.ru/profile/382881 
 ‚îú üí¨ fb.com/profile.php?id=1
... –∞ —Ç–∞–∫ –∂–µ –ø–æ id**** –∏–ª–∏ @UserName
 ‚îú üí¨ id281485304
 ‚îî üí¨ @durov

üìá –ü–æ–∏—Å–∫ –ø–æ –ü–∞—Å–ø–æ—Ä—Ç—É
 ‚îî üí¨ 6113825395

üìë –ü–æ–∏—Å–∫ –ø–æ –ò–ù–ù
 ‚îî üí¨ 784806113663

üé´ –ü–æ–∏—Å–∫ –ø–æ –°–ù–ò–õ–°
 ‚îî üí¨ 13046964250

üì® –ü–æ–∏—Å–∫ –ø–æ E-mail
 ‚îî üí¨ tema@gmail.com

üí≥ –ü–æ–∏—Å–∫ –ø–æ –ù–æ–º–µ—Ä—É –ö–∞—Ä—Ç—ã
 ‚îî üí¨ 4276550070006000

üèö –ü–æ–∏—Å–∫ –ø–æ –ê–¥—Ä–µ—Å—É
 ‚îî üí¨ –ú–æ—Å–∫–≤–∞, –ì–µ—Ä–∞—Å–∏–º–∞ –ö—É—Ä–∏–Ω–∞, 14–∫2

üì∏ –ü–æ–∏—Å–∫ –ø–æ –§–æ—Ç–æ
 ‚îî üí¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É —Ñ–æ—Ç–æ –ß–µ–ª–æ–≤–µ–∫–∞ –∏–ª–∏ –ü—Ä–µ–¥–º–µ—Ç–∞, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.

üåê –ù–∞—à —Å–∞–π—Ç ‚Ä¢ ü§ñ –†–µ–∑–µ—Ä–≤–Ω—ã–π –ë–æ—Ç 4
""")
# –∫–æ–Ω–µ—Ü –∫–æ–º–∞–Ω–¥—ã /q








# –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ id
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
def create_search_direction_keyboard(id_value):
    keyboard = InlineKeyboardMarkup()
    btn_telegram = InlineKeyboardButton(text="Telegram", callback_data=f"search_telegram_{id_value}")
    btn_vk = InlineKeyboardButton(text="–í–∫–æ–Ω—Ç–∞–∫—Ç–µ", callback_data=f"search_vk_{id_value}")
    btn_ok = InlineKeyboardButton(text="–û–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∏", callback_data=f"search_ok_{id_value}")
    btn_instagram = InlineKeyboardButton(text="Instagram", callback_data=f"search_instagram_{id_value}")
    btn_facebook = InlineKeyboardButton(text="Facebook", callback_data=f"search_facebook_{id_value}")
    keyboard.row(btn_telegram)
    keyboard.row(btn_vk, btn_ok)
    keyboard.row(btn_instagram, btn_facebook)
    return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å "id"
@bot.message_handler(func=lambda message: message.text.lower().startswith("id"))
def handle_id_search(message):
    id_value = message.text[2:].strip()
    bot.reply_to(
        message,
        f"üÜî id{id_value}\n‚îî  –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞",
        reply_markup=create_search_direction_keyboard(id_value)
    )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞ users.csv —Å GitHub
def get_users_file():
    url = f"https://api.github.com/repos/fonesst/usersFRONEST/contents/users.csv"
    headers = {
        "Authorization": f"token {GITHUB_TOKEN}",
        "Content-Type": "application/json"
    }
    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        content = response.json()['content']
        decoded_content = base64.b64decode(content).decode('utf-8')
        return decoded_content.splitlines()
    else:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ users.csv: {response.json().get('message')}")
        return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ user_id –≤ —Ñ–∞–π–ª–µ users.csv
def find_user_info(user_id):
    users_data = get_users_file()
    if users_data:
        for line in users_data:
            parts = line.split('|')
            if len(parts) >= 8 and parts[1].strip() == str(user_id):
                return {
                    "phone": parts[0].strip(),
                    "id": parts[1].strip(),
                    "username": parts[2].strip(),
                    "first_name": parts[3].strip(),
                    "last_name": parts[4].strip(),
                    "chat_type": parts[5].strip(),
                    "language": parts[6].strip(),
                    "added_date": parts[7].strip()
                }
    return None

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ —Å –≤—ã–±–æ—Ä–æ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
@bot.callback_query_handler(func=lambda call: call.data.startswith("search_"))
def handle_search_callback(call):
    direction, id_value = call.data.split("_")[1], call.data.split("_")[2]
    
    if direction == "telegram":
        user_info = find_user_info(id_value)

        if user_info:
            report_text = (
                f"üîé –û–¢–ß–Å–¢ –ü–û –ó–ê–ü–†–û–°–£:\n"
                f" ‚îî  Telegram: id{id_value}\n\n"
                f"üìã –û—Ç—á—ë—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç:\n"
                f"‚îúüìß ID: {user_info['id']}\n"
                f"‚îúüìû –¢–µ–ª–µ—Ñ–æ–Ω: {user_info['phone']}\n"
                f"‚îúüë§ –Æ–∑–µ—Ä–Ω–µ–π–º: {user_info['username']}\n"
                f"‚îúüè∑ –ò–º—è –§–∞–º–∏–ª–∏—è: {user_info['first_name']} {user_info['last_name']}\n"
                f"‚îúüí¨ –¢–∏–ø —á–∞—Ç–∞: {user_info['chat_type']}\n"
                f"‚îúüåé –Ø–∑—ã–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: {user_info['language']}\n"
                f"‚îîüìÜ –î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {user_info['added_date']}"
            )
            
            # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ë–î ¬´–≥–ª–∞–∑ –±–æ–≥–∞¬ª"
            keyboard = InlineKeyboardMarkup()
            check_db_btn = InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ë–î ¬´–≥–ª–∞–∑ –±–æ–≥–∞¬ª", callback_data=f"check_db_{id_value}")
            keyboard.add(check_db_btn)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç—á–µ—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–æ–π
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, 
                                  text=report_text, reply_markup=keyboard)
        else:
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ "–≥–ª–∞–∑–µ –±–æ–≥–∞" –¥–∞–∂–µ –µ—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
            keyboard = InlineKeyboardMarkup()
            check_db_btn = InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ë–î ¬´–≥–ª–∞–∑ –±–æ–≥–∞¬ª", callback_data=f"check_db_{id_value}")
            keyboard.add(check_db_btn)

            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, 
                                  text=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è id{id_value} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", reply_markup=keyboard)
    else:
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, 
                              text=f"–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ {direction} –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Ñ–∞–π–ª–∞—Ö gb0.csv –∏ gb1.csv
def search_in_gb_files(user_id):
    files_to_check = ['gb0.csv', 'gb1.csv']
    for file_name in files_to_check:
        url = f"https://api.github.com/repos/fonesst/usersFRONEST/contents/{file_name}"
        headers = {
            "Authorization": f"token {GITHUB_TOKEN}",
            "Content-Type": "application/json"
        }
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            content = response.json()['content']
            decoded_content = base64.b64decode(content).decode('utf-8')
            for line in decoded_content.splitlines():
                parts = line.split(',')
                if len(parts) >= 5 and parts[0].strip() == str(user_id):
                    return {
                        "id": parts[0].strip(),
                        "phone": parts[1].strip(),
                        "username": parts[2].strip(),
                        "first_name": parts[3].strip(),
                        "last_name": parts[4].strip()
                    }
    return None

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ë–î ¬´–≥–ª–∞–∑ –±–æ–≥–∞¬ª"
@bot.callback_query_handler(func=lambda call: call.data.startswith("check_db_"))
def handle_check_db_callback(call):
    id_value = call.data.split("_")[2]
    user_info = search_in_gb_files(id_value)
    
    if user_info:
        report_text = (
            "üí¶ –í —Å–ª–∏—Ç–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Telegram-–±–æ—Ç–∞ ¬´–ì–ª–∞–∑ –ë–æ–≥–∞¬ª —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ 774 —Ç—ã—Å—è—á–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. "
            "–í–∫–ª—é—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ, —Ç–∞–∫–∏–µ –∫–∞–∫ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤, –∏–º–µ–Ω–∞ –∏ —Ñ–∞–º–∏–ª–∏–∏. "
            "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞–ª–∞ ¬´—É—Ç–µ–∫—à–µ–π¬ª –≤ –∏—é–ª–µ 2021 –≥–æ–¥–∞.\n\n"
            "üìã –û—Ç—á—ë—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç:\n"
            f"‚îúüìß ID: {user_info['id']}\n"
            f"‚îúüìû –¢–µ–ª–µ—Ñ–æ–Ω: {user_info['phone']}\n"
            f"‚îúüë§ –Æ–∑–µ—Ä–Ω–µ–π–º: {user_info['username']}\n"
            f"‚îúüè∑ –ò–º—è: {user_info['first_name']}\n"
            f"‚îîüè∑ –§–∞–º–∏–ª–∏—è: {user_info['last_name']}"
        )
    else:
        report_text = (
            "üí¶ –í —Å–ª–∏—Ç–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Telegram-–±–æ—Ç–∞ ¬´–ì–ª–∞–∑ –ë–æ–≥–∞¬ª —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ 774 —Ç—ã—Å—è—á–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. "
            "–í–∫–ª—é—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ, —Ç–∞–∫–∏–µ –∫–∞–∫ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤, –∏–º–µ–Ω–∞ –∏ —Ñ–∞–º–∏–ª–∏–∏. "
            "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞–ª–∞ ¬´—É—Ç–µ–∫—à–µ–π¬ª –≤ –∏—é–ª–µ 2021 –≥–æ–¥–∞.\n\n"
            f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è id{id_value} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ¬´–ì–ª–∞–∑ –ë–æ–≥–∞¬ª."
        )
    
    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, 
                          text=report_text)
# –ö–æ–Ω–µ—Ü –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ id










# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
try:
    bot.polling(none_stop=True)
except Exception as e:
    logging.error(f"–û—à–∏–±–∫–∞: {e}")
finally:
    from ip import driver
    driver.quit()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã
