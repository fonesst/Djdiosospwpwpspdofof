import phonenumbers
from phonenumbers import geocoder, carrier, timezone, is_valid_number
from phonenumbers.phonenumberutil import number_type, PhoneNumberType

def phone_lookup(phone_number):
    try:
        parsed_number = phonenumbers.parse(phone_number)
        country = geocoder.description_for_number(parsed_number, "ru")
        operator = carrier.name_for_number(parsed_number, "ru")
        timezones = timezone.time_zones_for_number(parsed_number)
        timezones_str = ", ".join(timezones)
        valid_number = is_valid_number(parsed_number)
        phone_type = number_type(parsed_number)
        phone_type_str = (
            "–ú–æ–±–∏–ª—å–Ω—ã–π" if phone_type == PhoneNumberType.MOBILE else
            "–°—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã–π" if phone_type == PhoneNumberType.FIXED_LINE else
            "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø"
        )
        international_format = phonenumbers.format_number(parsed_number, phonenumbers.PhoneNumberFormat.INTERNATIONAL)

        response = (
            f"üì±\n"
            f"‚îú –ù–æ–º–µ—Ä: {phone_number}\n"
            f"‚îú –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: {international_format}\n"
            f"‚îú –°—Ç—Ä–∞–Ω–∞: {country}\n"
            f"‚îú –û–ø–µ—Ä–∞—Ç–æ—Ä: {operator if operator else '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ'}\n"
            f"‚îú –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {timezones_str}\n"
            f"‚îú –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä: {'–î–∞' if valid_number else '–ù–µ—Ç'}\n"
            f"‚îî –¢–∏–ø –Ω–æ–º–µ—Ä–∞: {phone_type_str}\n\n"
        )

        return response, phone_number  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä

    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–º–µ—Ä–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–æ–º–µ—Ä –≤–≤–µ–¥–µ–Ω –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. –û—à–∏–±–∫–∞: {str(e)}", None